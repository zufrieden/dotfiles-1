{"_id":"replace","_rev":"38-8da14fc3490491459ce3cc6d707d3eff","name":"replace","description":"Command line search and replace utility","dist-tags":{"latest":"0.2.7"},"versions":{"0.1.0":{"name":"replace","description":"Command line search and replace utility","version":"0.1.0","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"0.4.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"devDependencies":{},"_id":"replace@0.1.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"afcb3183ac53be1c2dcd229c8467f2313301a8e6","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.0.tgz"},"scripts":{},"directories":{}},"0.1.1":{"name":"replace","description":"Command line search and replace utility","version":"0.1.1","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"0.4.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"devDependencies":{},"_id":"replace@0.1.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"46eab7cb2b5ba1de0a28d2c59cb69683a7a714d7","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.1.tgz"},"scripts":{},"directories":{}},"0.1.3":{"name":"replace","description":"Command line search and replace utility","version":"0.1.3","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"0.4.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"devDependencies":{},"_id":"replace@0.1.3","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"ddfe252aea8c943e94d42168323d08d1377a2eb3","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.3.tgz"},"scripts":{},"directories":{}},"0.1.4":{"name":"replace","description":"Command line search and replace utility","version":"0.1.4","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"0.4.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"devDependencies":{},"_id":"replace@0.1.4","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"7d703757551b22b94752a3ed6c27eb182c7b5388","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.4.tgz"},"scripts":{},"directories":{}},"0.1.6":{"name":"replace","description":"Command line search and replace utility","version":"0.1.6","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"0.4.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"devDependencies":{},"_id":"replace@0.1.6","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"7f87be87e4fd072fd4f91b41b5aab06ebbe8093c","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.6.tgz"},"scripts":{},"directories":{}},"0.1.7":{"name":"replace","description":"Command line search and replace utility","version":"0.1.7","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"0.4.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"devDependencies":{},"_id":"replace@0.1.7","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"a5b0c61277057ccf8e5ef8c167dbc5b1d15089e4","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.7.tgz"},"scripts":{},"directories":{}},"0.1.8":{"name":"replace","description":"Command line search and replace utility","version":"0.1.8","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"0.4.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"devDependencies":{},"_id":"replace@0.1.8","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.5","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"7c0473d648db6d8547869c17971cccc4e7c97574","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.8.tgz"},"scripts":{},"directories":{}},"0.1.9":{"name":"replace","description":"Command line search and replace utility","version":"0.1.9","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.0.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"_npmJsonOpts":{"file":"/Users/harth/.npm/replace/0.1.9/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"replace@0.1.9","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"c09d4f9e5681bd6de67b1f5a34658254ccc51988","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.9.tgz"},"scripts":{},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.1.10":{"name":"replace","description":"Command line search and replace utility","version":"0.1.10","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.0.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"_id":"replace@0.1.10","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"41959ad28d660834bb168e7380b1864b7771ac1f","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.10.tgz"},"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\n\n## Examples\n\nReplace all occurrences of \"var\" with \"let\" in files in the current directory:\n\n```\nreplace 'var' 'let' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'var' 'let' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'var' 'let' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'var' 'let' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'var' 'let' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'var' 'let' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n# More Details\n\n### Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax, and slower!\n\n```\nsearch \"setTimeout\" . -r\n```\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n### What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.1.11":{"name":"replace","description":"Command line search and replace utility","version":"0.1.11","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"git://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.5.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"_id":"replace@0.1.11","devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"62aaa8e2149dadbbb075da31ff9b729f949e49bf","tarball":"http://registry.npmjs.org/replace/-/replace-0.1.11.tgz"},"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\n\n## Examples\n\nReplace all occurrences of \"var\" with \"let\" in files in the current directory:\n\n```\nreplace 'var' 'let' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'var' 'let' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'var' 'let' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'var' 'let' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'var' 'let' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'var' 'let' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n# More Details\n\n### Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax, and slower!\n\n```\nsearch \"setTimeout\" . -r\n```\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n### What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.0":{"name":"replace","description":"Command line search and replace utility","version":"0.2.0","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.5.x","colors":"0.5.x"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\n\n## Examples\n\nReplace all occurrences of \"var\" with \"let\" in files in the current directory:\n\n```\nreplace 'var' 'let' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'var' 'let' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'var' 'let' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'var' 'let' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'var' 'let' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'var' 'let' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n# More Details\n\n### Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax, and slower!\n\n```\nsearch \"setTimeout\" . -r\n```\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n### What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","_id":"replace@0.2.0","dist":{"shasum":"d9cf7f7f9262213c53610305a72f58731b54f8aa","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.0.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.1":{"name":"replace","description":"Command line search and replace utility","version":"0.2.1","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.5.x","colors":"0.5.x"},"devDependencies":{"tape":"~0.2.2"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep","search","replace"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\nYou can now use `replace` and `search` from the command line.\n\n\n## Examples\n\nReplace all occurrences of \"foo\" with \"bar\" in files in the current directory:\n\n```\nreplace 'foo' 'bar' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'foo' 'bar' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'foo' 'bar' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'foo' 'bar' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'foo' 'bar' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'foo' 'bar' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n## Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax.\n\n```\nsearch \"setTimeout\" . -r\n```\n\n## Programmatic Usage\nYou can use replace from your JS program:\n\n```javascript\nvar replace = require(\"replace\");\n\nreplace({\n  regex: \"foo\",\n  replacement: \"bar\",\n  path: ['.'],\n  recursive: true,\n  silent: true,\n});\n```\n\n## More Details\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n## What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","_id":"replace@0.2.1","dist":{"shasum":"c1a4325d1a67404482129da9bb7823152e200287","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.1.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.2":{"name":"replace","description":"Command line search and replace utility","version":"0.2.2","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.5.x","colors":"0.5.x"},"devDependencies":{"tape":"~0.2.2"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep","search","replace"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\nYou can now use `replace` and `search` from the command line.\n\n\n## Examples\n\nReplace all occurrences of \"foo\" with \"bar\" in files in the current directory:\n\n```\nreplace 'foo' 'bar' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'foo' 'bar' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'foo' 'bar' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'foo' 'bar' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'foo' 'bar' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'foo' 'bar' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n## Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax.\n\n```\nsearch \"setTimeout\" . -r\n```\n\n## Programmatic Usage\nYou can use replace from your JS program:\n\n```javascript\nvar replace = require(\"replace\");\n\nreplace({\n  regex: \"foo\",\n  replacement: \"bar\",\n  paths: ['.'],\n  recursive: true,\n  silent: true,\n});\n```\n\n## More Details\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n## What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","_id":"replace@0.2.2","dist":{"shasum":"e7d5d00935acbb7f75f2bf64a9b34e62e81716c5","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.2.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.3":{"name":"replace","description":"Command line search and replace utility","version":"0.2.3","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.5.x","colors":"0.5.x","minimatch":"~0.2.9"},"devDependencies":{"tape":"~0.2.2"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep","search","replace"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\nYou can now use `replace` and `search` from the command line.\n\n\n## Examples\n\nReplace all occurrences of \"foo\" with \"bar\" in files in the current directory:\n\n```\nreplace 'foo' 'bar' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'foo' 'bar' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'foo' 'bar' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'foo' 'bar' . -r --include=*.js\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'foo' 'bar' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'foo' 'bar' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n## Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax.\n\n```\nsearch \"setTimeout\" . -r\n```\n\n## Programmatic Usage\nYou can use replace from your JS program:\n\n```javascript\nvar replace = require(\"replace\");\n\nreplace({\n  regex: \"foo\",\n  replacement: \"bar\",\n  paths: ['.'],\n  recursive: true,\n  silent: true,\n});\n```\n\n## More Details\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n## What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","_id":"replace@0.2.3","dist":{"shasum":"bf6f6c6c03262a0020d180425da30527f6028095","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.3.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.4":{"name":"replace","description":"Command line search and replace utility","version":"0.2.4","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.5.x","colors":"0.5.x","minimatch":"~0.2.9"},"devDependencies":{"tape":"~0.2.2"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep","search","replace"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\nYou can now use `replace` and `search` from the command line.\n\n\n## Examples\n\nReplace all occurrences of \"foo\" with \"bar\" in files in the current directory:\n\n```\nreplace 'foo' 'bar' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'foo' 'bar' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'foo' 'bar' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'foo' 'bar' . -r --include=*.js\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'foo' 'bar' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'foo' 'bar' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n## Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax.\n\n```\nsearch \"setTimeout\" . -r\n```\n\n## Programmatic Usage\nYou can use replace from your JS program:\n\n```javascript\nvar replace = require(\"replace\");\n\nreplace({\n  regex: \"foo\",\n  replacement: \"bar\",\n  paths: ['.'],\n  recursive: true,\n  silent: true,\n});\n```\n\n## More Details\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n## What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","_id":"replace@0.2.4","dist":{"shasum":"4f43c297442a1c9bf87e4a6cffd961a029f2ab9e","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.4.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.5":{"name":"replace","description":"Command line search and replace utility","version":"0.2.5","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.6.x","colors":"0.5.x","minimatch":"~0.2.9"},"devDependencies":{"tape":"~0.2.2"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep","search","replace"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\nYou can now use `replace` and `search` from the command line.\n\n\n## Examples\n\nReplace all occurrences of \"foo\" with \"bar\" in files in the current directory:\n\n```\nreplace 'foo' 'bar' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'foo' 'bar' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'foo' 'bar' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'foo' 'bar' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'foo' 'bar' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'foo' 'bar' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n## Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax.\n\n```\nsearch \"setTimeout\" . -r\n```\n\n## Programmatic Usage\nYou can use replace from your JS program:\n\n```javascript\nvar replace = require(\"replace\");\n\nreplace({\n  regex: \"foo\",\n  replacement: \"bar\",\n  paths: ['.'],\n  recursive: true,\n  silent: true,\n});\n```\n\n## More Details\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n## What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","readmeFilename":"README.md","_id":"replace@0.2.5","dist":{"shasum":"2ff8df07bb0c768a9d9782887ab56d28fa498c19","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.5.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.6":{"name":"replace","description":"Command line search and replace utility","version":"0.2.6","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.6.x","colors":"0.5.x","minimatch":"~0.2.9"},"devDependencies":{"tape":"~0.2.2"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep","search","replace"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\nYou can now use `replace` and `search` from the command line.\n\n\n## Examples\n\nReplace all occurrences of \"foo\" with \"bar\" in files in the current directory:\n\n```\nreplace 'foo' 'bar' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'foo' 'bar' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'foo' 'bar' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'foo' 'bar' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'foo' 'bar' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'foo' 'bar' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n## Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax.\n\n```\nsearch \"setTimeout\" . -r\n```\n\n## Programmatic Usage\nYou can use replace from your JS program:\n\n```javascript\nvar replace = require(\"replace\");\n\nreplace({\n  regex: \"foo\",\n  replacement: \"bar\",\n  paths: ['.'],\n  recursive: true,\n  silent: true,\n});\n```\n\n## More Details\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n## What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","readmeFilename":"README.md","_id":"replace@0.2.6","dist":{"shasum":"d6d1f9401755c46327a0616745cfb0a92af23f26","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.6.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}},"0.2.7":{"name":"replace","description":"Command line search and replace utility","version":"0.2.7","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"main":"replace.js","repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"dependencies":{"nomnom":"1.6.x","colors":"0.5.x","minimatch":"~0.2.9"},"devDependencies":{"tape":"~0.2.2"},"bin":{"replace":"./bin/replace.js","search":"./bin/search.js"},"keywords":["sed","grep","search","replace"],"readme":"# replace\n`replace` is a command line utility for performing search-and-replace on files. It's similar to sed but there are a few differences:\n\n* Modifies files when matches are found\n* Recursive search on directories with -r\n* Uses [JavaScript syntax](https://developer.mozilla.org/en/JavaScript/Guide/Regular_Expressions#Using_Simple_Patterns) for regular expressions and [replacement strings](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter).\n\n# Install\nWith [node.js](http://nodejs.org/) and [npm](http://github.com/isaacs/npm):\n\n\tnpm install replace -g\n\nYou can now use `replace` and `search` from the command line.\n\n\n## Examples\n\nReplace all occurrences of \"foo\" with \"bar\" in files in the current directory:\n\n```\nreplace 'foo' 'bar' *\n```\n\nReplace in all files in a recursive search of the current directory:\n\n```\nreplace 'foo' 'bar' . -r\n```\n\nReplace only in test/file1.js and test/file2.js:\n\n```\nreplace 'foo' 'bar' test/file1.js test/file2.js\n```\n\nReplace all word pairs with \"_\" in middle with a \"-\":\n\n```\nreplace '(\\w+)_(\\w+)' '$1-$2' *\n```\n\nReplace only in files with names matching *.js:\n\n```\nreplace 'foo' 'bar' . -r --include=\"*.js\"\n```\n\nDon't replace in files with names matching *.min.js and *.py:\n\n```\nreplace 'foo' 'bar' . -r --exclude=\"*.min.js,*.py\"\n```\n\nPreview the replacements without modifying any files:\n\n```\nreplace 'foo' 'bar' . -r --preview\n```\n\nSee all the options:\n\n```\nreplace -h\n```\n\n## Search\nThere's also a `search` command. It's like `grep`, but with `replace`'s syntax.\n\n```\nsearch \"setTimeout\" . -r\n```\n\n## Programmatic Usage\nYou can use replace from your JS program:\n\n```javascript\nvar replace = require(\"replace\");\n\nreplace({\n  regex: \"foo\",\n  replacement: \"bar\",\n  paths: ['.'],\n  recursive: true,\n  silent: true,\n});\n```\n\n## More Details\n\n### Excludes\nBy default, `replace` and `search` will exclude files (binaries, images, etc) that match patterns in the `\"defaultignore\"` located in this directory.\n\n### On huge directories\nIf `replace` is taking too long on a large directory, try turning on the quiet flag with `-q`, only including the necessary file types with `--include` or limiting the lines shown in a preview with `-n`.\n\n\n## What it looks like\n![replace](http://i.imgur.com/qmJjS.png)\n\n","readmeFilename":"README.md","_id":"replace@0.2.7","dist":{"shasum":"e22d08a9e2e6764337bb530166a4dd89c2558fda","tarball":"http://registry.npmjs.org/replace/-/replace-0.2.7.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"harth","email":"fayearthur@gmail.com"},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"directories":{}}},"maintainers":[{"name":"harth","email":"fayearthur@gmail.com"}],"time":{"0.1.0":"2011-06-05T22:32:39.530Z","0.1.1":"2011-06-06T06:02:21.129Z","0.1.3":"2011-06-07T18:02:55.919Z","0.1.4":"2011-06-07T19:20:47.074Z","0.1.6":"2011-06-11T17:28:30.910Z","0.1.7":"2011-06-11T20:49:40.651Z","0.1.8":"2011-06-16T04:37:01.732Z","0.1.9":"2011-08-07T00:55:47.294Z","0.1.10":"2012-09-10T21:31:52.861Z","0.1.11":"2012-09-10T21:56:29.868Z","0.2.0":"2012-11-13T23:46:18.995Z","0.2.1":"2013-01-26T10:19:40.126Z","0.2.2":"2013-02-19T02:40:13.010Z","0.2.3":"2013-02-28T01:56:39.231Z","0.2.4":"2013-03-07T06:11:34.056Z","0.2.5":"2013-04-30T03:52:47.815Z","0.2.6":"2013-07-02T19:14:57.562Z","0.2.7":"2013-07-13T05:48:11.951Z"},"author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"repository":{"type":"git","url":"http://github.com/harthur/replace.git"},"users":{"millermedeiros":true},"_attachments":{"replace-0.2.7.tgz":{"content_type":"application/octet-stream","revpos":37,"digest":"md5-HdrHXXSWeT+BdxSOrp6aeg==","length":6711,"stub":true},"replace-0.2.6.tgz":{"content_type":"application/octet-stream","revpos":35,"digest":"md5-vgOPkcJa4beUEOSE+r1t4g==","length":6701,"stub":true},"replace-0.2.5.tgz":{"content_type":"application/octet-stream","revpos":33,"digest":"md5-vNUKSr/jijNzdjHBSMgLrQ==","length":6654,"stub":true},"replace-0.2.4.tgz":{"content_type":"application/octet-stream","revpos":32,"digest":"md5-9SEKMJz8g7bxD/vonE4btQ==","length":6627,"stub":true},"replace-0.2.3.tgz":{"content_type":"application/octet-stream","revpos":30,"digest":"md5-vSRXubTzu58FJ6Qq6o41ow==","length":6611,"stub":true},"replace-0.2.2.tgz":{"content_type":"application/octet-stream","revpos":28,"digest":"md5-ShHH7oRRvG/Ll4tUnJq4Jw==","length":5155,"stub":true},"replace-0.2.1.tgz":{"content_type":"application/octet-stream","revpos":26,"digest":"md5-ZlzfOXml8MbXBOFXj9LxlQ==","length":4971,"stub":true},"replace-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-SBL0/2RMmsurRftJj+zIUg==","length":4222,"stub":true},"replace-0.1.11.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-m9JvyPFmBrtmVBjTfayinQ==","length":5309,"stub":true},"replace-0.1.10.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-59xv2SvzMOjeAigb24/eDQ==","length":5321,"stub":true},"replace-0.1.9.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-1XYctCmrEeCF+X8OhOZHIw==","length":53222,"stub":true},"replace-0.1.8.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-rtU2QlKDbQ7poMz37a51aQ==","length":52518,"stub":true},"replace-0.1.7.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-YyrpDHGiCcQUEPoTmMmIpw==","length":53108,"stub":true},"replace-0.1.6.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-RV5wUpXNbdipiaiAxsOHTQ==","length":53288,"stub":true},"replace-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-pZhvHMyp4bEdTn8CTy4DmQ==","length":52747,"stub":true},"replace-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-ORvD6H2+jxDDs6BFP82cZw==","length":52820,"stub":true},"replace-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-jCncQqLI+9ehkFVAKmH1jw==","length":3726,"stub":true},"replace-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-d8YBltX2TrEz+AQFFN5kVQ==","length":3751,"stub":true}},"_etag":"\"DFIE61R502CA7RATN15Z0BF17\""}