{"_id":"grunt-jslint","_rev":"49-dd233880e68bd7ad90df7ef56fa59af1","name":"grunt-jslint","description":"Validates JavaScript files with JSLint","dist-tags":{"latest":"1.1.2"},"versions":{"0.1.0":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.0","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"MIT","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n## Documentation\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the MIT license.\n","_id":"grunt-jslint@0.1.0","dist":{"shasum":"85b188d7043c429d90874dca9acce0e27f58a675","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.0.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.1":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.1","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"MIT","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n## Documentation\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the MIT license.\n","_id":"grunt-jslint@0.1.1","dist":{"shasum":"14136db1981cafb594968dd804184c4e946a44cf","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.1.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.2":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.2","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"MIT","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n## Documentation\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the MIT license.\n","_id":"grunt-jslint@0.1.2","dist":{"shasum":"3578c8375d3762860aef57be5734f29a7e7586c1","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.2.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.3":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.3","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"MIT","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n## Documentation\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the MIT license.\n","_id":"grunt-jslint@0.1.3","dist":{"shasum":"89b76126dc6c0ecd56fcf83ec70d1abc91547679","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.3.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.4":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.4","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"MIT","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-MIT"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n## Documentation\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the MIT license.\n","_id":"grunt-jslint@0.1.4","dist":{"shasum":"6e64db3eeed775977a31a70b0a5e9bdb42a2675f","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.4.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.5":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.5","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n## Documentation\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.1.5","dist":{"shasum":"6f04e1e2a3e27c169f4c26d78f8f1aa3ace5b167","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.5.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.6":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.6","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n\n## Documentation\n_(Coming soon)_\n\n## Example Usage\n\n\tmodule.exports = function (grunt) {\n\n\t\t'use strict';\n\n\t\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\t\tgrunt.initConfig({\n\t\t\twatch: {\n\t\t\t\tfiles: '<config:jslint.files>',\n\t\t\t\ttasks: 'jslint'\n\t\t\t},\n\n\t\t\tjslint: { // configure the task\n\t\t\t\tfiles: [ // some example files\n\t\t\t\t\t'grunt.js',\n\t\t\t\t\t'src/**/*.js'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tjslint_directives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\n\t\tgrunt.registerTask('default', 'server watch');\n\t};\n\n\n\n## Release History\n0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.1.6","dist":{"shasum":"5c5801f91672365185fd2de1f37837c202dd0de5","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.6.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.7":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.7","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin"],"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n\n\n## Documentation\n_(Coming soon)_\n\n\n## Example Usage\n```javascript\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t]\n\t\t},\n\n\t\tjslint_directives: { // example directives\n\t\t\tbrowser: true,\n\t\t\tunparam: true,\n\t\t\ttodo: true,\n\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t'jQuery'\n\t\t\t]\n\t\t},\n\n\t\tjslint_options: {\n\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\tlog: 'out/lint.log',\n\t\t\terrorsOnly: true // only display errors\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'server watch');\n};\n```\n\n\n## Release History\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.1.7","dist":{"shasum":"ec92d50c7316af7a1f27eb6b3a807cda6b3be89f","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.7.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.1.8":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.1.8","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"grunt test"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\n### jslint\n\nThe multitask, responsible for running JSLint.  The task accepts a single option (property), **files**.\n\nThe files property is an array of files or [wildcards](https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards) which you want to be validated with JSLint.\n\n### jslint_directives\n\nConfiguration options/settings to pre-define in JSLint.\n\nSample directives:\n\n```javascript\nbrowser: true,\nunparam: true,\npredef: [ // functionally the same thing as /*global myGlobal:true, anotherGlobal:true*/\n\t'myGlobal',\n\t'anotherGlobal'\n]\n```\n\n### jslint_options\n\nConfiguration options/settings for the plugin itself.\n\nCurrently supported options include:\n\n* **errorsOnly** - A Boolean option which tells the plugin to only display errors when set to ```true```.\n* **log** - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n* **junit** - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n* **exclude** - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\n## Example Usage\n```javascript\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t]\n\t\t},\n\n\t\tjslint_directives: { // example directives\n\t\t\tbrowser: true,\n\t\t\tunparam: true,\n\t\t\ttodo: true,\n\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t'jQuery'\n\t\t\t]\n\t\t},\n\n\t\tjslint_options: {\n\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\tlog: 'out/lint.log',\n\t\t\terrorsOnly: true // only display errors\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'server watch');\n};\n```\n\n\n## Release History\n* 0.1.8 - Updating README.md to contain more verbose documentation, adding keywords to package.json\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.1.8","dist":{"shasum":"0bbd8b1387c461817a51dbd794b614db50aeca11","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.1.8.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.0":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.0","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{"grunt":"~0.3.11"},"devDependencies":{"grunt":"~0.3.11"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>Options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\t// TAKE NOTE - this has changed since 0.1.8\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\terrorsOnly: true // only display errors\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n\n## Release History\n* 0.2.0 - Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n* 0.1.8 - Updating README.md to contain more verbose documentation, adding keywords to package.json\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.2.0","dist":{"shasum":"d1ce1e0168cd39b440a935efbc9a7b08cae9b4aa","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.0.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.1":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.1","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1"},"devDependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>Options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>jslintXml</b> - A String/filepath option which, when provided, tells the plugin where to write a JSLint-style XML file to.\n\t\t\t</li>\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\tjslintXml: 'out/jslint_xml.xml',\n\t\t\t\terrorsOnly: true // only display errors\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n\n## Release History\n* 0.2.1 - Added JSLint XML output for [Jenkins Violations Plugin](https://wiki.jenkins-ci.org/display/JENKINS/Violations)\n* 0.2.0 - Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n* 0.1.8 - Updating README.md to contain more verbose documentation, adding keywords to package.json\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.2.1","dist":{"shasum":"1033a87d7126d866dc4fd2003178f355f7088188","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.1.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.2":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.2","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1"},"devDependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>Options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>jslintXml</b> - A String/filepath option which, when provided, tells the plugin where to write a JSLint-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>failOnError</b> - A Boolean option - defaults to <code>true</code>; when set to <code>false</code>, grunt will not fail if JSLint detects an error.\n\t\t\t</li>\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\tjslintXml: 'out/jslint_xml.xml',\n\t\t\t\terrorsOnly: true, // only display errors\n\t\t\t\tfailOnError: false // defaults to true\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n\n## Release History\n* 0.2.2 - Adding option to not cause Grunt to fail if a violation is detected\n* 0.2.1 - Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n* 0.2.0 - Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n* 0.1.8 - Updating README.md to contain more verbose documentation, adding keywords to package.json\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.2.2","dist":{"shasum":"a0aaa22053a7139e351b4a9b9e4ad43c159c0228","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.2.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.2-1":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.2-1","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1"},"devDependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>Options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>jslintXml</b> - A String/filepath option which, when provided, tells the plugin where to write a JSLint-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>failOnError</b> - A Boolean option - defaults to <code>true</code>; when set to <code>false</code>, grunt will not fail if JSLint detects an error.\n\t\t\t</li>\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\tjslintXml: 'out/jslint_xml.xml',\n\t\t\t\terrorsOnly: true, // only display errors\n\t\t\t\tfailOnError: false // defaults to true\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n\n## Release History\n* 0.2.2-1 - Updating JSLint to \"edition\" **2012-11-17**\n* 0.2.2 - Adding option to not cause Grunt to fail if a violation is detected\n* 0.2.1 - Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n* 0.2.0 - Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n* 0.1.8 - Updating README.md to contain more verbose documentation, adding keywords to package.json\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.2.2-1","dist":{"shasum":"5fdacbe0e6979ff9b9fce6e438d03ec47eabdbb8","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.2-1.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.3-1":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.3-1","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1","underscore":"1.4.x"},"devDependencies":{"grunt":"~0.3.11","entities":"~0.1.1","clone":"~0.1.1"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>Options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>jslintXml</b> - A String/filepath option which, when provided, tells the plugin where to write a JSLint-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>failOnError</b> - A Boolean option - defaults to <code>true</code>; when set to <code>false</code>, grunt will not fail if JSLint detects an error.\n\t\t\t</li>\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\tjslintXml: 'out/jslint_xml.xml',\n\t\t\t\terrorsOnly: true, // only display errors\n\t\t\t\tfailOnError: false // defaults to true\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n\n## Release History\n* 0.2.3-1 Fix for bad template processing; thanks to @sbrandwoo\n* 0.2.3 - Adding support for Grunt *0.4.x* by using [underscore's templating engine](http://underscorejs.org/#template), rather than Grunt's version of it.  Also updated JSLint to edition **2012-12-04**\n* 0.2.2-1 - Updating JSLint to \"edition\" **2012-11-17**\n* 0.2.2 - Adding option to not cause Grunt to fail if a violation is detected\n* 0.2.1 - Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n* 0.2.0 - Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n* 0.1.8 - Updating README.md to contain more verbose documentation, adding keywords to package.json\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.2.3-1","dist":{"shasum":"72861424c5c913fe1e51dcd5def111531d8eca91","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.3-1.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.4":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.4","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{"grunt":"*"},"devDependencies":{"vows":"0.7.x"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>Options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>jslintXml</b> - A String/filepath option which, when provided, tells the plugin where to write a JSLint-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>failOnError</b> - A Boolean option - defaults to <code>true</code>; when set to <code>false</code>, grunt will not fail if JSLint detects an error.\n\t\t\t</li>\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\tjslintXml: 'out/jslint_xml.xml',\n\t\t\t\terrorsOnly: true, // only display errors\n\t\t\t\tfailOnError: false // defaults to true\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `./test.sh` in the root of your repository.\n\n## TODOs\n\n- better test coverage\n- test-runner for Windows\n\n## Release History\n* 0.2.4 - Re-factor everything, allowing for a test suite to be created.  Updated the outputted JUnit-style XML for better intergration with Jenkins per @sbrandwoo.  Remove unecessary dependencies.\n* 0.2.3-1 - Fix for bad template processing; thanks to @sbrandwoo\n* 0.2.3 - Adding support for Grunt *0.4.x* by using [underscore's templating engine](http://underscorejs.org/#template), rather than Grunt's version of it.  Also updated JSLint to edition **2012-12-04**\n* 0.2.2-1 - Updating JSLint to \"edition\" **2012-11-17**\n* 0.2.2 - Adding option to not cause Grunt to fail if a violation is detected\n* 0.2.1 - Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n* 0.2.0 - Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n* 0.1.8 - Updating README.md to contain more verbose documentation, adding keywords to package.json\n* 0.1.7 - Added an option to only report on errors\n* 0.1.6 - Added an exclude option and added number of files in violation to standard output.\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.2.4","dist":{"shasum":"47f1e135603e8ecdf6d08609fe874059ef7159cd","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.4.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.5":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.5","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{"grunt":"~0.4.0"},"devDependencies":{"vows":"*","xml2js":"*"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint](https://github.com/douglascrockford/JSLint) as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n\n<ul>\n\t<li>\n\t\t<b>files</b> - An array of files or <a href=\"https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\">wildcards</a> which you want to be validated with JSLint.\n\t</li>\n\n\t<li>\n\t\t<b>exclude</b> - A String/filepath/wildcard option which, when provided, tells the plugin which files should be ignored (not scanned).\n\t</li>\n\n\t<li>\n\t\t<b>directives</b> - Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as <code>predef: ['myglobal']</code>\n\t</li>\n\n\t<li>\n\t\t<b>options</b> - Configuration options/settings for the plugin itself.  Currently supports the following:\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>errorsOnly</b> - A Boolean option which tells the plugin to only display errors when set to <code>true</code>.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>log</b> - A String/filepath option which, when provided, tells the plugin where to write a verbose log to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>junit</b> - A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>jslintXml</b> - A String/filepath option which, when provided, tells the plugin where to write a JSLint-style XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>failOnError</b> - A Boolean option - defaults to <code>true</code>; when set to <code>false</code>, grunt will not fail if JSLint detects an error.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>checkstyle</b> - A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>shebang</b> - Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\t\t\t</li>\n\t\t</ul>\n\n\t</li>\n</ul>\n\n\n## Example Usage\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-jslint'); // load the task\n\n\tgrunt.initConfig({\n\t\twatch: {\n\t\t\tfiles: '<config:jslint.files>',\n\t\t\ttasks: 'jslint'\n\t\t},\n\n\t\tjslint: { // configure the task\n\t\t\tfiles: [ // some example files\n\t\t\t\t'grunt.js',\n\t\t\t\t'src/**/*.js'\n\t\t\t],\n\t\t\texclude: [\n\t\t\t\t'**/ignore-*.js',\n\t\t\t\t'bananas.js'\n\t\t\t],\n\t\t\tdirectives: { // example directives\n\t\t\t\tbrowser: true,\n\t\t\t\tunparam: true,\n\t\t\t\ttodo: true,\n\t\t\t\tpredef: [ // array of pre-defined globals\n\t\t\t\t\t'jQuery'\n\t\t\t\t]\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tjunit: 'out/junit.xml', // write the output to a JUnit XML\n\t\t\t\tlog: 'out/lint.log',\n\t\t\t\tjslintXml: 'out/jslint_xml.xml',\n\t\t\t\terrorsOnly: true, // only display errors\n\t\t\t\tfailOnError: false, // defaults to true\n\t\t\t\tshebang: true, // ignore shebang lines\n\t\t\t\tcheckstyle: 'out/checkstyle.xml' // write a checkstyle-XML\n\t\t\t}\n\t\t}\n\n\t});\n\n\tgrunt.registerTask('default', 'watch');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `./test.sh` in the root of your repository.\n\n## TODOs\n\n- better test coverage\n- test-runner for Windows\n\n## Release History\n\n\n### 0.2.5\n\n- Fixed `failOnError` bug (@glan)\n- Fixed JSLint XML bug (@glan)\n- Another grunt 0.4.x support bug (@glan)\n- Bug fix for XML reports (non-escaped characters)\n- Added checkstyle XML reporting\n- Added `shebang` option\n- Improved test coverage\n\n### 0.2.4\n\n- Re-factor everything, allowing for a test suite to be created\n- Updated the outputted JUnit-style XML for better intergration with Jenkins per @sbrandwoo\n- Removed unecessary dependencies\n\n### 0.2.3-1\n\n- Fix for bad template processing; thanks to @sbrandwoo\n\n### 0.2.3\n\n- Adding support for Grunt *0.4.x* by using [underscore's templating engine](http://underscorejs.org/#template), rather than Grunt's version of it\n- Updated JSLint to edition **2012-12-04**\n\n### 0.2.2-1\n\n- Updating JSLint to \"edition\" **2012-11-17**\n\n### 0.2.2\n\n- Adding option to not cause Grunt to fail if a violation is detected\n\n### 0.2.1\n\n- Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n\n### 0.2.0\n\n- Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n\n### 0.1.8\n\n- Updating README.md to contain more verbose documentation\n- Adding keywords to package.json\n\n### 0.1.7\n\n- Added an option to only report on errors\n\n### 0.1.6\n\n- Added an exclude option\n- Added number of files in violation to standard output\n\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n","_id":"grunt-jslint@0.2.5","dist":{"shasum":"c147d013af3226b8a7c3d9a18d21046895dd3013","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.5.tgz"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.6":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.6","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{},"devDependencies":{"grunt":"~0.4.0","vows":"*","xml2js":"*"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint] as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n- **files** An array of files or [wildcards] which you want to be validated by JSLint\n- **exclude** An array of files or [wildcards] which you do *not* want to be validated by JSLint\n- **directives** Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as `predef: ['myglobal']`\n- **options**\n    - **errorsOnly** A Boolean option which tells the plugin to only display errors when set to `true`\n    - **log** A String/filepath option which, when provided, tells the plugin where to write a verbose log to\n    - **junit** A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to\n    - **failOnError** A Boolean option - defaults to `true`; when set to `false`, grunt will not fail if JSLint detects an error\n    - **checkstyle** A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to\n    - **shebang** Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\n## Example Usage\n\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n  'use strict';\n\n  grunt.loadNpmTasks('grunt-jslint'); // load the task\n\n  grunt.initConfig({\n    watch: {\n      files: '<config:jslint.files>',\n      tasks: 'jslint'\n    },\n\n    jslint: { // configure the task\n      files: [ // some example files\n        'grunt.js',\n        'src/**/*.js'\n      ],\n      exclude: [\n        '**/ignore-*.js',\n        'bananas.js'\n      ],\n      directives: { // example directives\n        browser: true,\n        unparam: true,\n        todo: true,\n        predef: [ // array of pre-defined globals\n          'jQuery'\n        ]\n      },\n      options: {\n        junit: 'out/junit.xml', // write the output to a JUnit XML\n        log: 'out/lint.log',\n        jslintXml: 'out/jslint_xml.xml',\n        errorsOnly: true, // only display errors\n        failOnError: false, // defaults to true\n        shebang: true, // ignore shebang lines\n        checkstyle: 'out/checkstyle.xml' // write a checkstyle-XML\n      }\n    }\n\n  });\n\n  grunt.registerTask('default', 'watch');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `./test.sh` in the root of your repository.\n\n## TODOs\n\n- better test coverage\n- test-runner for Windows\n\n## Release History\n\n### 0.2.5a\n\n- Make [grunt] a devDependency to speed up `npm install` time\n\n### 0.2.5\n\n- Fixed `failOnError` bug (@glan)\n- Fixed JSLint XML bug (@glan)\n- Another grunt 0.4.x support bug (@glan)\n- Bug fix for XML reports (non-escaped characters)\n- Added checkstyle XML reporting\n- Added `shebang` option\n- Improved test coverage\n\n### 0.2.4\n\n- Re-factor everything, allowing for a test suite to be created\n- Updated the outputted JUnit-style XML for better intergration with Jenkins per @sbrandwoo\n- Removed unecessary dependencies\n\n### 0.2.3-1\n\n- Fix for bad template processing; thanks to @sbrandwoo\n\n### 0.2.3\n\n- Adding support for Grunt *0.4.x* by using [underscore's templating engine](http://underscorejs.org/#template), rather than Grunt's version of it\n- Updated JSLint to edition **2012-12-04**\n\n### 0.2.2-1\n\n- Updating JSLint to \"edition\" **2012-11-17**\n\n### 0.2.2\n\n- Adding option to not cause Grunt to fail if a violation is detected\n\n### 0.2.1\n\n- Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n\n### 0.2.0\n\n- Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n\n### 0.1.8\n\n- Updating README.md to contain more verbose documentation\n- Adding keywords to package.json\n\n### 0.1.7\n\n- Added an option to only report on errors\n\n### 0.1.6\n\n- Added an exclude option\n- Added number of files in violation to standard output\n\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n[wildcards]: https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\n[JSLint]: https://github.com/douglascrockford/JSLint","readmeFilename":"README.md","_id":"grunt-jslint@0.2.6","dist":{"shasum":"229fa271df5d0d4eda11dffa38f67b5f5ed02777","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.6.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"1.0.0":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"1.0.0","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"index.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"make test"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","vows":"~0.7.0","xml2js":"~0.2.8","better-assert":"~1.0.0"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\n[![Build Status](https://travis-ci.org/stephenmathieson/grunt-jslint.png?branch=master)](https://travis-ci.org/stephenmathieson/grunt-jslint) [![Dependency Status](https://gemnasium.com/stephenmathieson/grunt-jslint.png)](https://gemnasium.com/stephenmathieson/grunt-jslint)\n\nValidates JavaScript files with [JSLint] as a [grunt] task.\n\n## Installation\nInstall this grunt plugin next to your project's [Gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n## Documentation\n\nA multi-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n- **files** An array of files or [wildcards] which you want to be validated by JSLint\n- **exclude** An array of files or [wildcards] which you do *not* want to be validated by JSLint\n- **directives** Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as `predef: ['myglobal']`\n- **options**\n    - **errorsOnly** A Boolean option which tells the plugin to only display errors when set to `true`\n    - **log** A String/filepath option which, when provided, tells the plugin where to write a verbose log to\n    - **junit** A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to\n    - **failOnError** A Boolean option - defaults to `true`; when set to `false`, grunt will not fail if JSLint detects an error\n    - **checkstyle** A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to\n    - **shebang** Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\n### Moving to 1.0.0\n\ngrunt-jslint@1.0.0 has moved from a single-task to a multi-task, allowing you to specify different options for different groups of files.\n\nFor simple migration, just wrap `all: { ... }` around your jslint configuration in your Gruntfile and replace `files:` with `src:`.\n\nFor example:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      files: [ ... ],\n      options: { ... }\n    }\n  });\n};\n```\n\nhas become:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      all: {\n        src: [ ... ],\n        options: { ... }\n      }\n    }\n  });\n};\n```\n\n\n## Example Usage\n\n```javascript\nmodule.exports = function (grunt) {\n  'use strict';\n\n  grunt.loadNpmTasks('grunt-jslint'); // load the task\n\n  grunt.initConfig({\n    jslint: { // configure the task\n      // lint your project's server code\n      server: {\n        src: [ // some example files\n          'server/lib/*.js',\n          'server/routes/*.js',\n          'server/*.js',\n          'server/test/*.js'\n        ],\n        exclude: [\n          'server/config.js'\n        ],\n        directives: { // example directives\n          node: true,\n          todo: true\n        },\n        options: {\n          junit: 'out/server-junit.xml', // write the output to a JUnit XML\n          log: 'out/server-lint.log',\n          jslintXml: 'out/server-jslint.xml',\n          errorsOnly: true, // only display errors\n          failOnError: false, // defaults to true\n          checkstyle: 'out/server-checkstyle.xml' // write a checkstyle-XML\n        }\n      },\n      // lint your project's client code\n      client: {\n        src: [\n          'client/**/*.js'\n        ],\n        directives: {\n          browser: true,\n          predef: [\n            'jQuery'\n          ]\n        },\n        options: {\n          junit: 'out/client-junit.xml'\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('default', 'jslint');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `make test` in the root of your repository.\n\n## License\nCopyright (c) 2013 Stephen Mathieson\nLicensed under the WTFPL license.\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: http://gruntjs.com/\n[getting_started]: http://gruntjs.com/getting-started#the-gruntfile\n[wildcards]: http://gruntjs.com/configuring-tasks#files\n[JSLint]: https://github.com/douglascrockford/JSLint\n","readmeFilename":"README.md","_id":"grunt-jslint@1.0.0","dist":{"shasum":"a2d5a64e4839c3df3976808f4835b639319eca53","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-1.0.0.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"1.1.0":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"1.1.0","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"index.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"make test"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","vows":"~0.7.0","xml2js":"~0.2.8","better-assert":"~1.0.0"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\n[![Build Status](https://travis-ci.org/stephenmathieson/grunt-jslint.png?branch=master)](https://travis-ci.org/stephenmathieson/grunt-jslint) [![Dependency Status](https://gemnasium.com/stephenmathieson/grunt-jslint.png)](https://gemnasium.com/stephenmathieson/grunt-jslint)\n\nValidates JavaScript files with [JSLint] as a [grunt] task.\n\n## Installation\nInstall this grunt plugin next to your project's [Gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n## Documentation\n\nA multi-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n- **files** An array of files or [wildcards] which you want to be validated by JSLint\n- **exclude** An array of files or [wildcards] which you do *not* want to be validated by JSLint\n- **directives** Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as `predef: ['myglobal']`\n- **options**\n    - **errorsOnly** A Boolean option which tells the plugin to only display errors when set to `true`\n    - **log** A String/filepath option which, when provided, tells the plugin where to write a verbose log to\n    - **junit** A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to\n    - **failOnError** A Boolean option - defaults to `true`; when set to `false`, grunt will not fail if JSLint detects an error\n    - **checkstyle** A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to\n    - **shebang** Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\n### Moving to 1.x.0\n\ngrunt-jslint@1.x.0 has moved from a single-task to a multi-task, allowing you to specify different options for different groups of files.\n\nFor simple migration, just wrap `all: { ... }` around your jslint configuration in your Gruntfile and replace `files:` with `src:`.\n\nFor example:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      files: [ ... ],\n      options: { ... }\n    }\n  });\n};\n```\n\nhas become:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      all: {\n        src: [ ... ],\n        options: { ... }\n      }\n    }\n  });\n};\n```\n\n\n## Example Usage\n\n```javascript\nmodule.exports = function (grunt) {\n  'use strict';\n\n  grunt.loadNpmTasks('grunt-jslint'); // load the task\n\n  grunt.initConfig({\n    jslint: { // configure the task\n      // lint your project's server code\n      server: {\n        src: [ // some example files\n          'server/lib/*.js',\n          'server/routes/*.js',\n          'server/*.js',\n          'server/test/*.js'\n        ],\n        exclude: [\n          'server/config.js'\n        ],\n        directives: { // example directives\n          node: true,\n          todo: true\n        },\n        options: {\n          junit: 'out/server-junit.xml', // write the output to a JUnit XML\n          log: 'out/server-lint.log',\n          jslintXml: 'out/server-jslint.xml',\n          errorsOnly: true, // only display errors\n          failOnError: false, // defaults to true\n          checkstyle: 'out/server-checkstyle.xml' // write a checkstyle-XML\n        }\n      },\n      // lint your project's client code\n      client: {\n        src: [\n          'client/**/*.js'\n        ],\n        directives: {\n          browser: true,\n          predef: [\n            'jQuery'\n          ]\n        },\n        options: {\n          junit: 'out/client-junit.xml'\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('default', 'jslint');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `make test` in the root of your repository.\n\n## License\nCopyright (c) 2013 Stephen Mathieson\nLicensed under the WTFPL license.\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: http://gruntjs.com/\n[getting_started]: http://gruntjs.com/getting-started#the-gruntfile\n[wildcards]: http://gruntjs.com/configuring-tasks#files\n[JSLint]: https://github.com/douglascrockford/JSLint\n","readmeFilename":"README.md","_id":"grunt-jslint@1.1.0","dist":{"shasum":"c916bdb7cb468fbb4b6b66c4baf329dd00e4999b","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-1.1.0.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"1.1.1":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"1.1.1","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"index.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"make test"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","vows":"~0.7.0","xml2js":"~0.2.8","better-assert":"~1.0.0"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\n[![Build Status](https://travis-ci.org/stephenmathieson/grunt-jslint.png?branch=master)](https://travis-ci.org/stephenmathieson/grunt-jslint) [![Dependency Status](https://gemnasium.com/stephenmathieson/grunt-jslint.png)](https://gemnasium.com/stephenmathieson/grunt-jslint)\n\nValidates JavaScript files with [JSLint] as a [grunt] task.\n\n## Installation\nInstall this grunt plugin next to your project's [Gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n## Documentation\n\nA multi-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n- **files** An array of files or [wildcards] which you want to be validated by JSLint\n- **exclude** An array of files or [wildcards] which you do *not* want to be validated by JSLint\n- **directives** Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as `predef: ['myglobal']`\n- **options**\n    - **errorsOnly** A Boolean option which tells the plugin to only display errors when set to `true`\n    - **log** A String/filepath option which, when provided, tells the plugin where to write a verbose log to\n    - **junit** A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to\n    - **failOnError** A Boolean option - defaults to `true`; when set to `false`, grunt will not fail if JSLint detects an error\n    - **checkstyle** A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to\n    - **shebang** Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\n### Moving to 1.x.0\n\ngrunt-jslint@1.x.0 has moved from a single-task to a multi-task, allowing you to specify different options for different groups of files.\n\nFor simple migration, just wrap `all: { ... }` around your jslint configuration in your Gruntfile and replace `files:` with `src:`.\n\nFor example:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      files: [ ... ],\n      options: { ... }\n    }\n  });\n};\n```\n\nhas become:\n\n```js\nmodule.exports = function (grunt) {\n  grunt.loadNpmTasks('grunt-jslint');\n  grunt.initConfig({\n    jslint: {\n      all: {\n        src: [ ... ],\n        options: { ... }\n      }\n    }\n  });\n};\n```\n\n\n## Example Usage\n\n```javascript\nmodule.exports = function (grunt) {\n  'use strict';\n\n  grunt.loadNpmTasks('grunt-jslint'); // load the task\n\n  grunt.initConfig({\n    jslint: { // configure the task\n      // lint your project's server code\n      server: {\n        src: [ // some example files\n          'server/lib/*.js',\n          'server/routes/*.js',\n          'server/*.js',\n          'server/test/*.js'\n        ],\n        exclude: [\n          'server/config.js'\n        ],\n        directives: { // example directives\n          node: true,\n          todo: true\n        },\n        options: {\n          junit: 'out/server-junit.xml', // write the output to a JUnit XML\n          log: 'out/server-lint.log',\n          jslintXml: 'out/server-jslint.xml',\n          errorsOnly: true, // only display errors\n          failOnError: false, // defaults to true\n          checkstyle: 'out/server-checkstyle.xml' // write a checkstyle-XML\n        }\n      },\n      // lint your project's client code\n      client: {\n        src: [\n          'client/**/*.js'\n        ],\n        directives: {\n          browser: true,\n          predef: [\n            'jQuery'\n          ]\n        },\n        options: {\n          junit: 'out/client-junit.xml'\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('default', 'jslint');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `make test` in the root of your repository.\n\n## License\nCopyright (c) 2013 Stephen Mathieson\nLicensed under the WTFPL license.\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: http://gruntjs.com/\n[getting_started]: http://gruntjs.com/getting-started#the-gruntfile\n[wildcards]: http://gruntjs.com/configuring-tasks#files\n[JSLint]: https://github.com/douglascrockford/JSLint\n","readmeFilename":"README.md","_id":"grunt-jslint@1.1.1","dist":{"shasum":"aed000dc0c23b9f9994a0aff518f22de11a136c4","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-1.1.1.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"1.1.2":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"1.1.2","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"index.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"scripts":{"test":"make test"},"dependencies":{},"devDependencies":{"grunt":"~0.4.1","vows":"~0.7.0","xml2js":"~0.2.8","better-assert":"~1.0.0"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\n[![Build Status](https://travis-ci.org/stephenmathieson/grunt-jslint.png?branch=master)](https://travis-ci.org/stephenmathieson/grunt-jslint) [![Dependency Status](https://gemnasium.com/stephenmathieson/grunt-jslint.png)](https://gemnasium.com/stephenmathieson/grunt-jslint)\n\nValidates JavaScript files with [JSLint] as a [grunt] task.\n\n## Installation\nInstall this grunt plugin next to your project's [Gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n## Documentation\n\nA multi-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n- **files** An array of files or [wildcards] which you want to be validated by JSLint\n- **exclude** An array of files or [wildcards] which you do *not* want to be validated by JSLint\n- **directives** Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as `predef: ['myglobal']`\n- **options**\n    - **errorsOnly** A Boolean option which tells the plugin to only display errors when set to `true`\n    - **log** A String/filepath option which, when provided, tells the plugin where to write a verbose log to\n    - **junit** A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to\n    - **failOnError** A Boolean option - defaults to `true`; when set to `false`, grunt will not fail if JSLint detects an error\n    - **checkstyle** A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to\n    - **shebang** Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\n\n## Example Usage\n\n```javascript\nmodule.exports = function (grunt) {\n  'use strict';\n\n  grunt.loadNpmTasks('grunt-jslint'); // load the task\n\n  grunt.initConfig({\n    jslint: { // configure the task\n      // lint your project's server code\n      server: {\n        src: [ // some example files\n          'server/lib/*.js',\n          'server/routes/*.js',\n          'server/*.js',\n          'server/test/*.js'\n        ],\n        exclude: [\n          'server/config.js'\n        ],\n        directives: { // example directives\n          node: true,\n          todo: true\n        },\n        options: {\n          junit: 'out/server-junit.xml', // write the output to a JUnit XML\n          log: 'out/server-lint.log',\n          jslintXml: 'out/server-jslint.xml',\n          errorsOnly: true, // only display errors\n          failOnError: false, // defaults to true\n          checkstyle: 'out/server-checkstyle.xml' // write a checkstyle-XML\n        }\n      },\n      // lint your project's client code\n      client: {\n        src: [\n          'client/**/*.js'\n        ],\n        directives: {\n          browser: true,\n          predef: [\n            'jQuery'\n          ]\n        },\n        options: {\n          junit: 'out/client-junit.xml'\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('default', 'jslint');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `make test` in the root of your repository.\n\n## License\nCopyright (c) 2013 Stephen Mathieson\nLicensed under the WTFPL license.\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: http://gruntjs.com/\n[getting_started]: http://gruntjs.com/getting-started#the-gruntfile\n[wildcards]: http://gruntjs.com/configuring-tasks#files\n[JSLint]: https://github.com/douglascrockford/JSLint\n","readmeFilename":"README.md","_id":"grunt-jslint@1.1.2","dist":{"shasum":"99c4c947fa801411e2d9615e215d7568d4fade29","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-1.1.2.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}},"0.2.5-a":{"name":"grunt-jslint","description":"Validates JavaScript files with JSLint","version":"0.2.5-a","homepage":"https://github.com/stephenmathieson/grunt-jslint","author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"bugs":{"url":"https://github.com/stephenmathieson/grunt-jslint/issues"},"licenses":[{"type":"WTFPL","url":"https://github.com/stephenmathieson/grunt-jslint/blob/master/LICENSE-WTFPL"}],"main":"grunt.js","bin":{"grunt-jslint":"bin/grunt-jslint"},"engines":{"node":"*"},"dependencies":{},"devDependencies":{"grunt":"~0.4.0","vows":"*","xml2js":"*"},"keywords":["gruntplugin","jslint","lint","code quality"],"readme":"# grunt-jslint\n\nValidates JavaScript files with [JSLint] as a [grunt](https://github.com/cowboy/grunt) task.\n\n## Installation\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with: `npm install grunt-jslint`\n\nThen add this line to your project's gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-jslint');\n```\n\n## Documentation\n\nA single-task to validate your JavaScript files with JSLint.\n\nSupports the following options:\n\n- **files** An array of files or [wildcards] which you want to be validated by JSLint\n- **exclude** An array of files or [wildcards] which you do *not* want to be validated by JSLint\n- **directives** Configuration options/settings to pre-define in JSLint.  Pre-defined globals are included within this object as `predef: ['myglobal']`\n- **options**\n    - **errorsOnly** A Boolean option which tells the plugin to only display errors when set to `true`\n    - **log** A String/filepath option which, when provided, tells the plugin where to write a verbose log to\n    - **junit** A String/filepath option which, when provided, tells the plugin where to write a JUnit-style XML file to\n    - **failOnError** A Boolean option - defaults to `true`; when set to `false`, grunt will not fail if JSLint detects an error\n    - **checkstyle** A String/filepath option which, when provided, tells the plugin where to write a CheckStyle-XML file to\n    - **shebang** Ignore shebang lines (`#!/usr/bin/whatever`) from files\n\n## Example Usage\n\n```javascript\n/*jslint node:true*/\n\nmodule.exports = function (grunt) {\n\n  'use strict';\n\n  grunt.loadNpmTasks('grunt-jslint'); // load the task\n\n  grunt.initConfig({\n    watch: {\n      files: '<config:jslint.files>',\n      tasks: 'jslint'\n    },\n\n    jslint: { // configure the task\n      files: [ // some example files\n        'grunt.js',\n        'src/**/*.js'\n      ],\n      exclude: [\n        '**/ignore-*.js',\n        'bananas.js'\n      ],\n      directives: { // example directives\n        browser: true,\n        unparam: true,\n        todo: true,\n        predef: [ // array of pre-defined globals\n          'jQuery'\n        ]\n      },\n      options: {\n        junit: 'out/junit.xml', // write the output to a JUnit XML\n        log: 'out/lint.log',\n        jslintXml: 'out/jslint_xml.xml',\n        errorsOnly: true, // only display errors\n        failOnError: false, // defaults to true\n        shebang: true, // ignore shebang lines\n        checkstyle: 'out/checkstyle.xml' // write a checkstyle-XML\n      }\n    }\n\n  });\n\n  grunt.registerTask('default', 'watch');\n};\n```\n\n## Contributing\n\nAll files should be validated with JSLint.  Bug fixes and/or new features must be accompanied by a passing test.  Tests are written with [vows](http://vowsjs.org/).\n\n### Validating coding style\n\nRun `grunt jslint` in the root of your repository.\n\n### Running the tests\n\nRun `./test.sh` in the root of your repository.\n\n## TODOs\n\n- better test coverage\n- test-runner for Windows\n\n## Release History\n\n### 0.2.5a\n\n- Make [grunt] a devDependency to speed up `npm install` time\n\n### 0.2.5\n\n- Fixed `failOnError` bug (@glan)\n- Fixed JSLint XML bug (@glan)\n- Another grunt 0.4.x support bug (@glan)\n- Bug fix for XML reports (non-escaped characters)\n- Added checkstyle XML reporting\n- Added `shebang` option\n- Improved test coverage\n\n### 0.2.4\n\n- Re-factor everything, allowing for a test suite to be created\n- Updated the outputted JUnit-style XML for better intergration with Jenkins per @sbrandwoo\n- Removed unecessary dependencies\n\n### 0.2.3-1\n\n- Fix for bad template processing; thanks to @sbrandwoo\n\n### 0.2.3\n\n- Adding support for Grunt *0.4.x* by using [underscore's templating engine](http://underscorejs.org/#template), rather than Grunt's version of it\n- Updated JSLint to edition **2012-12-04**\n\n### 0.2.2-1\n\n- Updating JSLint to \"edition\" **2012-11-17**\n\n### 0.2.2\n\n- Adding option to not cause Grunt to fail if a violation is detected\n\n### 0.2.1\n\n- Added JSLint XML output for [Jenkins Violations Plugin](https://github.com/jenkinsci/violations-plugin)\n\n### 0.2.0\n\n- Cleaned up your `grunt.js` file for you - moved all options into the `jslint` object\n\n### 0.1.8\n\n- Updating README.md to contain more verbose documentation\n- Adding keywords to package.json\n\n### 0.1.7\n\n- Added an option to only report on errors\n\n### 0.1.6\n\n- Added an exclude option\n- Added number of files in violation to standard output\n\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the WTFPL license.\n\n[npm_registry_page]: http://search.npmjs.org/#/grunt-jslint\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n[wildcards]: https://github.com/gruntjs/grunt/blob/master/docs/api_file.md#file-lists-and-wildcards\n[JSLint]: https://github.com/douglascrockford/JSLint","readmeFilename":"README.md","_id":"grunt-jslint@0.2.5-a","dist":{"shasum":"7d25f66a6ee8af0fc15ec00d514fa8fb437a9f14","tarball":"http://registry.npmjs.org/grunt-jslint/-/grunt-jslint-0.2.5a.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"stephenmathieson","email":"me@stephenmathieson.com"},"maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"directories":{}}},"readme":"# grunt-jslint\n\nValidates JavaScript files with JSLint\n## Documentation\n_(Coming soon)_\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2012 Stephen Mathieson\nLicensed under the MIT license.\n","maintainers":[{"name":"stephenmathieson","email":"me@stephenmathieson.com"}],"time":{"0.1.0":"2012-09-24T20:28:10.895Z","0.1.1":"2012-09-25T10:01:52.378Z","0.1.2":"2012-09-25T12:02:18.370Z","0.1.3":"2012-09-25T14:09:12.839Z","0.1.4":"2012-09-25T21:13:36.043Z","0.1.5":"2012-09-26T18:55:13.780Z","0.1.6":"2012-09-28T15:03:10.876Z","0.1.7":"2012-10-02T18:42:50.127Z","0.1.8":"2012-10-03T01:36:51.796Z","0.2.0":"2012-10-21T14:33:21.284Z","0.2.1":"2012-11-03T22:50:56.089Z","0.2.2":"2012-11-20T14:42:26.988Z","0.2.2-1":"2012-12-04T17:42:23.408Z","0.2.3-1":"2012-12-21T13:57:18.903Z","0.2.4":"2013-01-07T13:49:10.044Z","0.2.5":"2013-02-03T20:35:15.302Z","0.2.6":"2013-05-23T15:36:57.978Z","1.0.0":"2013-07-28T16:01:57.488Z","1.1.0":"2013-09-23T00:35:46.150Z","1.1.1":"2013-09-26T14:34:31.867Z","1.1.2":"2013-12-03T15:32:39.183Z","0.2.5-a":"2013-03-23T20:55:25.640Z"},"author":{"name":"Stephen Mathieson","email":"me@stephenmathieson.com"},"repository":{"type":"git","url":"git://github.com/stephenmathieson/grunt-jslint.git"},"_attachments":{"grunt-jslint-1.1.2.tgz":{"content_type":"application/octet-stream","revpos":48,"digest":"md5-ecAf1FG31A6eWqUbZcAgEg==","length":62349,"stub":true},"grunt-jslint-1.1.1.tgz":{"content_type":"application/octet-stream","revpos":46,"digest":"md5-PpDPpubWJefZEQJDdqUTSQ==","length":62121,"stub":true},"grunt-jslint-1.1.0.tgz":{"content_type":"application/octet-stream","revpos":44,"digest":"md5-HOqCuTExc2TVBzVlckQhUA==","length":62274,"stub":true},"grunt-jslint-1.0.0.tgz":{"content_type":"application/octet-stream","revpos":42,"digest":"md5-JNoiyOYsn9ood2nwK0mG+Q==","length":61897,"stub":true},"grunt-jslint-0.2.6.tgz":{"content_type":"application/octet-stream","revpos":40,"digest":"md5-2ca1n+XSWwzl0HziOuy/mQ==","length":61670,"stub":true},"grunt-jslint-0.2.5a.tgz":{"content_type":"application/octet-stream","revpos":38,"digest":"md5-sAEGnCTt+3xLsPEAYSlqvA==","length":75850,"stub":true},"grunt-jslint-0.2.5.tgz":{"content_type":"application/octet-stream","revpos":33,"digest":"md5-Iy60l6rFg1lerb5mCjpVKQ==","length":76054,"stub":true},"grunt-jslint-0.2.4.tgz":{"content_type":"application/octet-stream","revpos":31,"digest":"md5-MzGKfyfaCBsdymdwIgyqOg==","length":139992,"stub":true},"grunt-jslint-0.2.3-1.tgz":{"content_type":"application/octet-stream","revpos":29,"digest":"md5-f0nxEirr2gidLtfPySpvng==","length":136352,"stub":true},"grunt-jslint-0.2.2-1.tgz":{"content_type":"application/octet-stream","revpos":27,"digest":"md5-XVt5vYnFV9DRvrMB05vEJw==","length":70193,"stub":true},"grunt-jslint-0.2.2.tgz":{"content_type":"application/octet-stream","revpos":25,"digest":"md5-fYms04nnIFYjSN0/EB6gyg==","length":70239,"stub":true},"grunt-jslint-0.2.1.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-NzjL/IhikIsBfLOYs5WR9g==","length":70152,"stub":true},"grunt-jslint-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-vy6VlIVNRQaLPWOBV7O6gA==","length":69473,"stub":true},"grunt-jslint-0.1.8.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-nxJs9kaRGb55KQXtZr2cPQ==","length":69294,"stub":true},"grunt-jslint-0.1.7.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-mX7GXVvnBQ8jnbeUGqG/6A==","length":215970,"stub":true},"grunt-jslint-0.1.6.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-jiDWyJFyZ52mpzMQvakczg==","length":215721,"stub":true},"grunt-jslint-0.1.5.tgz":{"content_type":"application/octet-stream","revpos":13,"digest":"md5-m/E0ZgXSbk+P8BJsf+kIBA==","length":215407,"stub":true},"grunt-jslint-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":11,"digest":"md5-SpXo4wAavwBydy3HMHwXOA==","length":215310,"stub":true},"grunt-jslint-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-UiwQSO6p146iTQ001DwaaQ==","length":214859,"stub":true},"grunt-jslint-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":7,"digest":"md5-9z3dLsJ6olYt7Enyu8uPCQ==","length":214278,"stub":true},"grunt-jslint-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-CuaS8zFqGTE49369w4jsnQ==","length":214274,"stub":true},"grunt-jslint-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-6WyG+2Pg54GcafNKh1tb6A==","length":214267,"stub":true}},"_etag":"\"4XI39BGDDLITBKS88EHSTZIPZ\""}