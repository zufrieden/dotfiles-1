{"_id":"trigger-then","_rev":"10-407a107264a2c48a9b41ec542f57cbf1","name":"trigger-then","description":"Adding 'promise' triggers to Backbone events","dist-tags":{"latest":"0.3.0"},"versions":{"0.1.0":{"name":"trigger-then","main":"trigger-then.js","author":{"name":"Tim Griesser"},"repository":{"type":"git","url":"https://github.com/bookshelf/trigger-then"},"description":"Adding 'promise' triggers to Backbone events","version":"0.1.0","license":"MIT","readmeFilename":"README.md","scripts":{"test":"mocha -R spec test/index.js"},"devDependencies":{"backbone":"1.0.x","mocha":"1.7.x","when":"2.1.x","q":"0.9.x"},"dependencies":{},"keywords":["backbone","deferred","promise","events"],"readme":"trigger-then\n============\n\ntriggerThen - Backbone.js \"trigger\" with promises\n","_id":"trigger-then@0.1.0","dist":{"shasum":"4a876c6c8853d7b0a0294d8b17f0dabdcac7ac5b","tarball":"http://registry.npmjs.org/trigger-then/-/trigger-then-0.1.0.tgz"},"maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}],"directories":{}},"0.1.1":{"name":"trigger-then","main":"trigger-then.js","author":{"name":"Tim Griesser"},"repository":{"type":"git","url":"https://github.com/bookshelf/trigger-then"},"description":"Adding 'promise' triggers to Backbone events","version":"0.1.1","license":"MIT","readmeFilename":"README.md","scripts":{"test":"mocha -R spec test/index.js"},"devDependencies":{"backbone":"1.0.x","mocha":"1.7.x","when":"2.1.x","q":"0.9.x"},"dependencies":{},"keywords":["backbone","deferred","promise","events"],"readme":"# triggerThen\n\nAdding promises to Backbone event triggers, resolving when \neverything that needs triggering has completed. Allows returning\nvalues or promises from the listeners, where a failed promise will\nreject the events.\n\n## Initializing:\n\nProvide two arguments to the `trigger-then` library when required: \nthe copy of `Backbone` to mixin the `triggerThen` function, and the\npromise library (assuming it has a `reject` and `all` function).\n\n```\nrequire('trigger-then')(Backbone, When);\n\nvar Model = new Backbone.Model();\n\nModel.triggerThen('change').then(function(resp) {\n\n  // success!\n\n}, function(e) {\n  \n  // error!\n  console.log(e.stack);\n\n});\n```\n\n## License\n\nMIT","_id":"trigger-then@0.1.1","dist":{"shasum":"b2ad4482ebaedf880184e41055ddbc88bcc83e80","tarball":"http://registry.npmjs.org/trigger-then/-/trigger-then-0.1.1.tgz"},"maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}],"directories":{}},"0.3.0":{"name":"trigger-then","main":"trigger-then.js","author":{"name":"Tim Griesser"},"repository":{"type":"git","url":"https://github.com/bookshelf/trigger-then"},"description":"Adding 'promise' triggers to Backbone events","version":"0.3.0","license":"MIT","readmeFilename":"README.md","scripts":{"test":"mocha -R spec test/index.js"},"devDependencies":{"backbone":"1.0.x","mocha":"1.7.x","when":"2.2.x","q":"0.9.x"},"dependencies":{},"keywords":["backbone","deferred","promise","events"],"readme":"## trigger-then\n\nCreated for use in [bookshelf.js](http://github.com/tgriesser/bookshelf)\n\nAdds promises to `Backbone` event triggers, with a `triggerThen` method,\nresolving when everything that needs triggering has completed. Allows \nreturning values or promises from the listeners, where a failed promise will\nreject the events. An error thrown inside the events will also return a \nrejected promise.\n\n[![Build Status](https://travis-ci.org/bookshelf/trigger-then.png?branch=master)](https://travis-ci.org/bookshelf/trigger-then)\n\n### Initializing:\n\nProvide two arguments to the `trigger-then` library when required: \nthe copy of `Backbone` to mixin the `triggerThen` function, and the\npromise library (assuming it has a `reject` and `all` function).\n\n```\nrequire('trigger-then')(Backbone, When);\n\nvar Model = new Backbone.Model();\n\nModel.triggerThen('change').then(function(resp) {\n\n  // success!\n\n}, function(e) {\n  \n  // error!\n  console.log(e.stack);\n\n});\n```\n\n### License\n\nMIT\n","bugs":{"url":"https://github.com/bookshelf/trigger-then/issues"},"homepage":"https://github.com/bookshelf/trigger-then","_id":"trigger-then@0.3.0","dist":{"shasum":"2c3cf3ac888a0c74cb753bec4935d05a43782391","tarball":"http://registry.npmjs.org/trigger-then/-/trigger-then-0.3.0.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"tgriesser","email":"tgriesser10@gmail.com"},"maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}],"directories":{}}},"readme":"## trigger-then\n\nCreated for use in [bookshelf.js](http://github.com/tgriesser/bookshelf)\n\nAdds promises to `Backbone` event triggers, with a `triggerThen` method,\nresolving when everything that needs triggering has completed. Allows \nreturning values or promises from the listeners, where a failed promise will\nreject the events. An error thrown inside the events will also return a \nrejected promise.\n\n[![Build Status](https://travis-ci.org/bookshelf/trigger-then.png?branch=master)](https://travis-ci.org/bookshelf/trigger-then)\n\n### Initializing:\n\nProvide two arguments to the `trigger-then` library when required: \nthe copy of `Backbone` to mixin the `triggerThen` function, and the\npromise library (assuming it has a `reject` and `all` function).\n\n```\nrequire('trigger-then')(Backbone, When);\n\nvar Model = new Backbone.Model();\n\nModel.triggerThen('change').then(function(resp) {\n\n  // success!\n\n}, function(e) {\n  \n  // error!\n  console.log(e.stack);\n\n});\n```\n\n### License\n\nMIT\n","maintainers":[{"name":"tgriesser","email":"tgriesser10@gmail.com"}],"time":{"0.1.0":"2013-05-17T17:50:12.342Z","0.1.1":"2013-05-17T18:43:34.040Z","0.3.0":"2013-12-24T16:50:42.564Z"},"author":{"name":"Tim Griesser"},"repository":{"type":"git","url":"https://github.com/bookshelf/trigger-then"},"_attachments":{},"_etag":"\"DBMJX9WEUYY02ZQWEFB6Z9KC8\""}