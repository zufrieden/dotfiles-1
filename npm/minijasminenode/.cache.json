{"_id":"minijasminenode","_rev":"17-d539260f54c3089734a529bf0d3a5c79","name":"minijasminenode","description":"Super simple wrapper around Jasmine for Node","dist-tags":{"latest":"0.2.7","canary":"0.3.0"},"versions":{"0.2.0":{"name":"minijasminenode","version":"0.2.0","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\nusage\n-----\n\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n\nYou can also pass an options object into `executeSpecs`\n\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      done: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true\n    };\n    miniJasmineLib.executeSpecs(options);\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","_id":"minijasminenode@0.2.0","dist":{"shasum":"da16396cfbc649814515346e9f4b170cf17ca40c","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.0.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}},"0.2.2":{"name":"minijasminenode","version":"0.2.2","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      done: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","_id":"minijasminenode@0.2.2","dist":{"shasum":"b93bb67a2f8e8e440a9f42092d58ce8d2dd7385b","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.2.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}},"0.2.3":{"name":"minijasminenode","version":"0.2.3","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      done: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","_id":"minijasminenode@0.2.3","dist":{"shasum":"66a9f9f059542ce1ed497e522ce12aaac7618c80","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.3.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}},"0.2.4":{"name":"minijasminenode","version":"0.2.4","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      done: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true,\n      // Time to wait in milliseconds before a test automatically fails\n      defaultTimeoutInterval: 5000\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","_id":"minijasminenode@0.2.4","dist":{"shasum":"0d4beaff421f6f744ab2a112f6e64a2343d5e6be","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.4.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}},"0.2.5":{"name":"minijasminenode","version":"0.2.5","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      onComplete: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true,\n      // Time to wait in milliseconds before a test automatically fails\n      defaultTimeoutInterval: 5000\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","_id":"minijasminenode@0.2.5","dist":{"shasum":"3f0c5e1d86ab7f85c95fb756738f6860ec97522c","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.5.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}},"0.2.6":{"name":"minijasminenode","version":"0.2.6","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      onComplete: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true,\n      // Time to wait in milliseconds before a test automatically fails\n      defaultTimeoutInterval: 5000\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/juliemr/minijasminenode/issues"},"_id":"minijasminenode@0.2.6","dist":{"shasum":"8b5fac8c5877744ba7edf8168a089fd43f28f6e2","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.6.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}},"0.2.7":{"name":"minijasminenode","version":"0.2.7","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      onComplete: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true,\n      // Time to wait in milliseconds before a test automatically fails\n      defaultTimeoutInterval: 5000\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/juliemr/minijasminenode/issues"},"_id":"minijasminenode@0.2.7","dist":{"shasum":"534fd4550199ac68f2a70dc87c62daae9393e681","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.2.7.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}},"0.3.0":{"name":"minijasminenode","version":"0.3.0","description":"Super simple wrapper around Jasmine for Node","homepage":"https://github.com/juliemr/minijasminenode","repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"keywords":["testing","bdd"],"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"licenses":["MIT"],"dependencies":{},"main":"lib/index.js","bin":{"minijasminenode":"bin/minijn"},"scripts":{"test":"node lib/cli.js spec/*_spec.js"},"devDependencies":{},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nThe 2.0 branch is a beta version using Jasmine 2.0.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds result reporters for the terminal.\n- adds focused testing with iit and ddescribe.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\ninstallation\n------------\n\nGet the library with\n\n    npm install minijasminenode\n\nOr, install globally\n\n    npm install -g minijasminenode\n\nIf you install globally, you can use minijasminenode directly from the command line\n\n    minijasminenode mySpecFolder/mySpec.js\n\nusage\n-----\n\n```javascript\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n```\n\nYou can also pass an options object into `executeSpecs`\n\n````javascript\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      onComplete: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true,\n      // Time to wait in milliseconds before a test automatically fails\n      defaultTimeoutInterval: 5000\n    };\n    miniJasmineLib.executeSpecs(options);\n````\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\n*New* a canary version using Jasmine v2.0.0 is now available using\n\n    npm install minijasminenode@canary\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/juliemr/minijasminenode/issues"},"_id":"minijasminenode@0.3.0","dist":{"shasum":"823620c4576712f58077cefcf54b0ef932f928dd","tarball":"http://registry.npmjs.org/minijasminenode/-/minijasminenode-0.3.0.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"juliemr","email":"ju.ralph@gmail.com"},"maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"directories":{}}},"readme":"minijasminenode\n======\n\nBased on Jasmine-Node, but minus the fancy stuff.\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\nfeatures\n--------\n\nMiniJasmineNode exports a library which\n- places Jasmine in Node's global namespace, similar to how it's run in a browser\n- adds asynchronous testing with done().\n- adds result reporters for the terminal.\n- adds the ability to load tests from file.\n\nThe module also contains a command line wrapper that can be run with\n\n    ./bin/minijl specDir/mySpec1.js specDir/mySpec2.js\n\nFor more info on the command line wrapper\n\n    ./bin/minijl --help\n\nusage\n-----\n\n    var miniJasmineLib = require('minijasminenode');\n    // At this point, jasmine is available in the global node context\n\n    // Add your tests by filename.\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\n\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\n    // be automatically reported to the terminal.\n    miniJasmineLib.addReporter(myCustomReporter);\n\n    // Run those tests!\n    miniJasmineLib.executeSpecs();\n\nYou can also pass an options object into `executeSpecs`\n\n    var miniJasmineLib = require('minijasminenode');\n\n    var options = {\n      // An array of filenames, relative to current dir. These will be\n      // executed, as well as any tests added with addSpecs()\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\n      // A function to call on completion.\n      // function(runner, log)\n      done: function(runner, log) { util.prints('done!'); },\n      // If true, display spec names.\n      isVerbose: false,\n      // If true, print colors to the terminal.\n      showColors: true,\n      // If true, include stack traces in failures.\n      includeStackTrace: true\n    };\n    miniJasmineLib.executeSpecs(options);\n\njasmine\n-------\n\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\n\nto run the tests\n----------------\n`./specs.sh`\n\nThis will run passing tests as well as show examples of how failures look. To run only passing tests, use `npm test` or `./bin/minijn spec/*_spec.js`\n","maintainers":[{"name":"juliemr","email":"ju.ralph@gmail.com"}],"time":{"modified":"2013-12-27T03:58:51.336Z","created":"2013-07-11T21:42:44.260Z","0.2.0":"2013-07-11T21:42:45.071Z","0.2.2":"2013-07-16T02:34:48.866Z","0.2.3":"2013-07-16T03:03:21.868Z","0.2.4":"2013-08-27T18:06:26.251Z","0.2.5":"2013-10-01T01:27:04.276Z","0.2.6":"2013-12-06T01:54:14.320Z","0.2.7":"2013-12-20T01:35:22.719Z","0.3.0":"2013-12-27T03:58:51.336Z"},"author":{"name":"Julie Ralph","email":"ju.ralph@gmail.com"},"repository":{"type":"git","url":"https://github.com/juliemr/minijasminenode.git"},"_attachments":{},"_etag":"\"13GWCM1KOBRZAIMNZG7IX2KXG\""}