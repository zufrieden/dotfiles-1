{"_id":"grunt-html-validation","_rev":"79-95161fc204b0d7b4aab69dbb290494e0","name":"grunt-html-validation","description":"W3C html validaton grunt plugin","dist-tags":{"latest":"0.1.12"},"versions":{"0.1.0":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.0","homepage":"https://github.com/praveen/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveen/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveen/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveen/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.9","colors":"~0.6.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation\n\n> W3C html validaton grunt plugin\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.separator\nType: `String`\nDefault value: `',  '`\n\nA string value that is used to do something with whatever.\n\n#### options.punctuation\nType: `String`\nDefault value: `'.'`\n\nA string value that is used to do something else with whatever else.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to do something with whatever. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result would be `Testing, 1 2 3.`\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {},\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n})\n```\n\n#### Custom Options\nIn this example, custom options are used to do something else with whatever else. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result in this case would be `Testing: 1 2 3 !!!`\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.0","dist":{"shasum":"0c9737992d563fee40628e1486f36f66b8bd22da","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.0.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.2":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.2","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.9","colors":"~0.6.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.reset\nType: `Boolean`\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files - eg: sudo grunt validate --reset=true\n\n#### options.path\nType: `String`\nDefault value: `'validation-staus.json'`\n\nDefault file for storing validation information.\n\n### Usage Examples\n\n```js\nvalidation: {\n    options: {\n        reset: grunt.option('reset') || false\n    },\n    files: {\n        src: ['<%= yeoman.app %>/*.html', \n            '!<%= yeoman.app %>/index.html', \n            '!<%= yeoman.app %>/modules.html',\n            '!<%= yeoman.app %>/404.html']\n    }\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.2","dist":{"shasum":"f31ab5bfa15f659147f375689db64c6c3bed6642","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.2.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.3":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.3","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.9","colors":"~0.6.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.reset\nType: `Boolean`\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files - eg: sudo grunt validate --reset=true\n\n#### options.path\nType: `String`\nDefault value: `'validation-staus.json'`\n\nDefault file for storing validation information.\n\n### Usage Examples\n\n```js\nvalidation: {\n    options: {\n        reset: grunt.option('reset') || false\n    },\n    files: {\n        src: ['<%= yeoman.app %>/*.html', \n            '!<%= yeoman.app %>/index.html', \n            '!<%= yeoman.app %>/modules.html',\n            '!<%= yeoman.app %>/404.html']\n    }\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.3","dist":{"shasum":"fff02a3b09ab77eccac25b5943aa180512f74d1e","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.3.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.4":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.4","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.9","colors":"~0.6.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n[![NPM](https://nodei.co/npm/grunt-html-validation.png?downloads=true)](https://nodei.co/npm/grunt-html-validation/)\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.reset\nType: `Boolean`\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files - eg: sudo grunt validate --reset=true\n\n#### options.path\nType: `String`\nDefault value: `'validation-staus.json'`\n\nDefault file for storing validation information.\n\n#### options.reportpath\nType: `String`\nDefault value: `validation-report.json`\n\nConsolidated report in JSON format. \n\n#### options.validation\nType: `Boolean`\nDefault value: `false`\n\nWhen hit by a validation error, html-validator continue validating next file by default and this process continues until all files in the list completes validation. If 'toponerror' set to  `true`, validator will stop validating next file.\n\n### Usage Examples\n\n```js\nvalidation: {\n    options: {\n        reset: grunt.option('reset') || false,\n        toponerror: false\n    },\n    files: {\n        src: ['<%= yeoman.app %>/*.html', \n            '!<%= yeoman.app %>/index.html', \n            '!<%= yeoman.app %>/modules.html',\n            '!<%= yeoman.app %>/404.html']\n    }\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n * 2013-08-19   v0.1.4   Fixed issues. Added 'stoponerror' option, validation report added. \n * 2013-08-05   v0.1.2   Fixed issues.\n * 2013-04-20   v0.1.0   Initial release.\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.4","dist":{"shasum":"a67825d5f225617b1e03f18f851b1109e8f2dce1","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.4.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.5":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.5","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.9","colors":"~0.6.0","request":"~2.27.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n[![NPM](https://nodei.co/npm/grunt-html-validation.png?downloads=true)](https://nodei.co/npm/grunt-html-validation/)\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  validation: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.reset\nType: `Boolean` <br/>\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files - \n`eg: sudo grunt validate --reset=true`\n\n#### options.path\nType: `String` <br/>\nDefault value: `'validation-staus.json'`\n\nDefault file for storing validation information.\n\n#### options.reportpath\nType: `String` <br/>\nDefault value: `validation-report.json`\n\nConsolidated report in JSON format. \n\n#### options.stoponerror\nType: `Boolean` <br/>\nDefault value: `false`\n\nWhen hit by a validation error, html-validator continue validating next file by default and this process continues until all files in the list completes validation. If 'stoponerror' set to  `true`, validator will stop validating next file.\n\n#### options.maxTry\nType: `Number` <br/>\nDefault value: `3`\n\nNumber of retries when network error occuers. Default case, after 3 reties validator will move to next file.\n\n#### options.remotePath\nType: `String` <br/>\nDefault value: ``\n\nRemote base url path. eg: \"http://decodize.com/\". \n\n\n#### options.remoteFiles\nType: `Array` <br/>\nDefault value: ``\n\nArray of page paths to be validated. When remote files are not present validator will append file names from local folder. 'remotePath' is mandatory when this option is specified. \n\neg: remoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n                      \"css/site-preloading-methods/\"]\n\nyou can also provide a file contains array of pages.\n\nremoteFiles: \"validation-files.json\"\n\n```js\n[\"html/getting-started-with-yeoman-1-dot-0-beta-on-windows\",\n\"html/slidemote-universal-remote-control-for-html5-presentations/\",\n\"html/simple-responsive-image-technique/\"]\n```\n\n### Usage Examples\n\n```js\nvalidation: {\n    options: {\n        reset: grunt.option('reset') || false,\n        stoponerror: false,\n        remotePath: \"http://decodize.com/\",\n        remoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n                      \"css/site-preloading-methods/\"], //or\n        remoteFiles: \"validation-files.json\" // JSON file contains array of page paths.  \n    },\n    files: {\n        src: ['<%= yeoman.app %>/*.html', \n            '!<%= yeoman.app %>/index.html', \n            '!<%= yeoman.app %>/modules.html',\n            '!<%= yeoman.app %>/404.html']\n    }\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\nReport issues [here](https://github.com/praveenvijayan/grunt-html-validation/issues)\n\n## Release History\n * 2013-08-31   v0.1.5   Added remote validation support. Max network error retry count.  \n * 2013-08-19   v0.1.4   Fixed issues. Added 'stoponerror' option, validation report added. \n * 2013-08-05   v0.1.2   Fixed issues.\n * 2013-04-20   v0.1.0   Initial release.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/praveenvijayan/grunt-html-validation/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.5","dist":{"shasum":"d4e3a538aa890e790f1cefcd6268ee9bc15db0b9","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.5.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.6":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.6","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.10","colors":"~0.6.0","request":"~2.27.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n[![NPM](https://nodei.co/npm/grunt-html-validation.png?downloads=true)](https://nodei.co/npm/grunt-html-validation/)\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\tvalidation: {\n\t\toptions: {\n\t\t\t// Task-specific options go here.\n\t\t},\n\t\tyour_target: {\n\t\t\t// Target-specific file lists and/or options go here.\n\t\t},\n\t},\n})\n```\n\n### Options\n\n#### options.reset\nType: `Boolean` <br/>\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files - \n`eg: sudo grunt validate --reset=true`\n\n#### options.path\nType: `String` <br/>\nDefault value: `'validation-status.json'`\n\nDefault file for storing validation information.\n\n#### options.reportpath\nType: `String` <br/>\nDefault value: `validation-report.json`\n\nConsolidated report in JSON format. \n\n#### options.stoponerror\nType: `Boolean` <br/>\nDefault value: `false`\n\nWhen hit by a validation error, html-validator continue validating next file by default and this process continues until all files in the list completes validation. If 'stoponerror' set to  `true`, validator will stop validating next file.\n\n#### options.maxTry\nType: `Number` <br/>\nDefault value: `3`\n\nNumber of retries when network error occuers. Default case, after 3 reties validator will move to next file.\n\n#### options.remotePath\nType: `String` <br/>\nDefault value: ``\n\nRemote base url path. eg: \"http://decodize.com/\". \n\n\n#### options.remoteFiles\nType: `Array` <br/>\nDefault value: ``\n\nArray of page paths to be validated. When remote files are not present validator will append file names from local folder. 'remotePath' is mandatory when this option is specified. \n\neg: remoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"]\n\nyou can also provide a file contains array of pages.\n\nremoteFiles: \"validation-files.json\"\n\n```js\n[\"html/getting-started-with-yeoman-1-dot-0-beta-on-windows\",\n\"html/slidemote-universal-remote-control-for-html5-presentations/\",\n\"html/simple-responsive-image-technique/\"]\n```\n\n#### options.relaxerror\nType: `Array` <br/>\nDefault value: ``\n\nHelps to skip certain w3c errors messages from validation. Give exact error message in an array & validator will ignore those relaxed errors from validation. \n\n```js\nrelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\",\"Element title must not be empty.\"]\n```\n\n\n### Usage Examples\n\n```js\nvalidation: {\n\t\toptions: {\n\t\t\t\treset: grunt.option('reset') || false,\n\t\t\t\tstoponerror: false,\n\t\t\t\tremotePath: \"http://decodize.com/\",\n\t\t\t\tremoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"], //or\n\t\t\t\tremoteFiles: \"validation-files.json\", // JSON file contains array of page paths. \n\t\t\t\trelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\"] //ignores these errors\n\t\t},\n\t\tfiles: {\n\t\t\t\tsrc: ['<%= yeoman.app %>/*.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/index.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/modules.html',\n\t\t\t\t\t\t'!<%= yeoman.app %>/404.html']\n\t\t}\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\nReport issues [here](https://github.com/praveenvijayan/grunt-html-validation/issues)\n\n## Release History\n * 2013-08-31   v0.1.6   Added relaxed validation, w3cjs updated from 0.1.9 to 0.1.10.  \n * 2013-08-31   v0.1.5   Added remote validation support. Max network error retry count.  \n * 2013-08-19   v0.1.4   Fixed issues. Added 'stoponerror' option, validation report added. \n * 2013-08-05   v0.1.2   Fixed issues.\n * 2013-04-20   v0.1.0   Initial release.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/praveenvijayan/grunt-html-validation/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.6","dist":{"shasum":"888857abd7ab7da0b6cbcb3cd141f7267f6242b7","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.6.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.10":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.10","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.21","colors":"~0.6.0","request":"~2.27.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n[![NPM](https://nodei.co/npm/grunt-html-validation.png?downloads=true)](https://nodei.co/npm/grunt-html-validation/)\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\tvalidation: {\n\t\toptions: {\n\t\t\t// Task-specific options go here.\n\t\t},\n\t\tyour_target: {\n\t\t\t// Target-specific file lists and/or options go here.\n\t\t},\n\t},\n})\n```\n\n### Options\n\n#### options.reset\nType: `Boolean` <br/>\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files - \n`eg: sudo grunt validate --reset=true`\n\n#### options.path\nType: `String` <br/>\nDefault value: `'validation-status.json'`\n\nDefault file for storing validation information.\n\n#### options.reportpath\nType: `String` <br/>\nDefault value: `validation-report.json`\n\nConsolidated report in JSON format, if reportpath is ``false`` it will not generated.\n\n#### options.stoponerror\nType: `Boolean` <br/>\nDefault value: `false`\n\nWhen hit by a validation error, html-validator continue validating next file by default and this process continues until all files in the list completes validation. If 'stoponerror' set to  `true`, validator will stop validating next file.\n\n#### options.maxTry\nType: `Number` <br/>\nDefault value: `3`\n\nNumber of retries when network error occuers. Default case, after 3 reties validator will move to next file.\n\n#### options.remotePath\nType: `String` <br/>\nDefault value: ``\n\nRemote base url path. eg: \"http://decodize.com/\". \n\n\n#### options.remoteFiles\nType: `Array` <br/>\nDefault value: ``\n\nArray of page paths to be validated. When remote files are not present validator will append file names from local folder. 'remotePath' is mandatory when this option is specified. \n\neg: remoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"]\n\nyou can also provide a file contains array of pages.\n\nremoteFiles: \"validation-files.json\"\n\n```js\n[\"html/getting-started-with-yeoman-1-dot-0-beta-on-windows\",\n\"html/slidemote-universal-remote-control-for-html5-presentations/\",\n\"html/simple-responsive-image-technique/\"]\n```\n\n#### options.relaxerror\nType: `Array` <br/>\nDefault value: ``\n\nHelps to skip certain w3c errors messages from validation. Give exact error message or a regular expression in an array & validator will ignore those relaxed errors from validation. \n\n```js\nrelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\",\"document type does not allow element \\\"[A-Z]+\\\" here\"]\n```\n\n#### options.doctype\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- ``HTML5``\n- ``XHTML 1.0 Strict``\n- ``XHTML 1.0 Transitional``\n- ``XHTML 1.0 Frameset``\n- ``HTML 4.01 Strict``\n- ``HTML 4.01 Transitional``\n- ``HTML 4.01 Frameset``\n- ``HTML 4.01 + RDFa 1.1``\n- ``HTML 3.2``\n- ``HTML 2.0``\n- ``ISO/IEC 15445:2000 (\"ISO HTML\")``\n- ``XHTML 1.1``\n- ``XHTML + RDFa``\n- ``XHTML Basic 1.0``\n- ``XHTML Basic 1.1``\n- ``XHTML Mobile Profile 1.2``\n- ``XHTML-Print 1.0``\n- ``XHTML 1.1 plus MathML 2.0``\n- ``XHTML 1.1 plus MathML 2.0 plus SVG 1.1``\n- ``MathML 2.0``\n- ``SVG 1.0``\n- ``SVG 1.1``\n- ``SVG 1.1 Tiny``\n- ``SVG 1.1 Basic``\n- ``SMIL 1.0``\n- ``SMIL 2.0``\n\n\n#### options.charset\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- ``utf-8``\n- ``utf-16``\n- ``iso-8859-1``\n- ``iso-8859-2``\n- ``iso-8859-3``\n- ``iso-8859-4``\n- ``iso-8859-5``\n- ``iso-8859-6-i``\n- ``iso-8859-7``\n- ``iso-8859-8``\n- ``iso-8859-8-i``\n- ``iso-8859-9``\n- ``iso-8859-10``\n- ``iso-8859-11``\n- ``iso-8859-13``\n- ``iso-8859-14``\n- ``iso-8859-15``\n- ``iso-8859-16``\n- ``us-ascii``\n- ``euc-jp``\n- ``shift_jis``\n- ``iso-2022-jp``\n- ``euc-kr``\n- ``gb2312``\n- ``gb18030``\n- ``big5``\n- ``big5-HKSCS``\n- ``tis-620``\n- ``koi8-r``\n- ``koi8-u``\n- ``iso-ir-111``\n- ``macintosh``\n- ``windows-1250``\n- ``windows-1251``\n- ``windows-1252``\n- ``windows-1253``\n- ``windows-1254``\n- ``windows-1255``\n- ``windows-1256``\n- ``windows-1257``\n\n### Usage Examples\n\n```js\nvalidation: {\n\t\toptions: {\n\t\t\t\treset: grunt.option('reset') || false,\n\t\t\t\tstoponerror: false,\n\t\t\t\tremotePath: \"http://decodize.com/\",\n\t\t\t\tremoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"], //or\n\t\t\t\tremoteFiles: \"validation-files.json\", // JSON file contains array of page paths. \n\t\t\t\trelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\"] //ignores these errors\n\t\t},\n\t\tfiles: {\n\t\t\t\tsrc: ['<%= yeoman.app %>/*.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/index.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/modules.html',\n\t\t\t\t\t\t'!<%= yeoman.app %>/404.html']\n\t\t}\n}\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\nReport issues [here](https://github.com/praveenvijayan/grunt-html-validation/issues)\n\n## Release History\n * 2013-11-22   v0.1.9   Fix some bugs\n * 2013-11-22   v0.1.8   Added options for specify doctype and charset\n * 2013-11-22   v0.1.7   Added support for RegExp in relaxed validation\n * 2013-08-31   v0.1.6   Added relaxed validation, w3cjs updated from 0.1.9 to 0.1.10.  \n * 2013-08-31   v0.1.5   Added remote validation support. Max network error retry count.  \n * 2013-08-19   v0.1.4   Fixed issues. Added 'stoponerror' option, validation report added. \n * 2013-08-05   v0.1.2   Fixed issues.\n * 2013-04-20   v0.1.0   Initial release.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/praveenvijayan/grunt-html-validation/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.10","dist":{"shasum":"1813f934308b71a8cab23eeeadc579b50800b6ce","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.10.tgz"},"_from":".","_npmVersion":"1.3.2","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.11":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.11","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.22","colors":"~0.6.0","request":"~2.27.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n[![NPM](https://nodei.co/npm/grunt-html-validation.png?downloads=true)](https://nodei.co/npm/grunt-html-validation/)\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\nAnd add to your task list using `validation`:\n\n```js\ngrunt.registerTask(\"default\", [\"validation\"]);\n```\n\n## The \"validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `validation` to the data object passed into `grunt.initConfig()`.\n\n```js\nvalidation: {\n\t\toptions: {\n\t\t\t\treset: grunt.option('reset') || false,\n\t\t\t\tstoponerror: false,\n\t\t\t\tremotePath: \"http://decodize.com/\",\n\t\t\t\tremoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"], //or\n\t\t\t\tremoteFiles: \"validation-files.json\", // JSON file contains array of page paths. \n\t\t\t\trelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\"] //ignores these errors\n\t\t},\n\t\tfiles: {\n\t\t\t\tsrc: ['<%= yeoman.app %>/*.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/index.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/modules.html',\n\t\t\t\t\t\t'!<%= yeoman.app %>/404.html']\n\t\t}\n}\n```\n\n### Options\n\n#### options.reset\nType: `Boolean` <br/>\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files -\n`eg: sudo grunt validate --reset=true`\n\n#### options.proxy\nType: `String` <br/>\nDefault value: `null`\n\nSetup your proxy when you are behind a corporate proxy and encounters `ETIMEDOUT`.\n\n```js\nproxy: 'http://proxy:8080'\n```\n\n#### options.path\nType: `String` <br/>\nDefault value: `'validation-status.json'`\n\nDefault file for storing validation information.\n\n#### options.reportpath\nType: `String` <br/>\nDefault value: `validation-report.json`\n\nConsolidated report in JSON format, if reportpath is ``false`` it will not generated.\n\n#### options.stoponerror\nType: `Boolean` <br/>\nDefault value: `false`\n\nWhen hit by a validation error, html-validator continue validating next file by default and this process continues until all files in the list completes validation. If 'stoponerror' set to  `true`, validator will stop validating next file.\n\n#### options.maxTry\nType: `Number` <br/>\nDefault value: `3`\n\nNumber of retries when network error occuers. Default case, after 3 reties validator will move to next file.\n\n#### options.remotePath\nType: `String` <br/>\nDefault value: ``\n\nRemote base url path. eg: \"http://decodize.com/\". \n\n\n#### options.remoteFiles\nType: `Array` <br/>\nDefault value: ``\n\nArray of page paths to be validated. When remote files are not present validator will append file names from local folder. 'remotePath' is mandatory when this option is specified. \n\neg: remoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"]\n\nyou can also provide a file contains array of pages.\n\nremoteFiles: \"validation-files.json\"\n\n```js\n[\"html/getting-started-with-yeoman-1-dot-0-beta-on-windows\",\n\"html/slidemote-universal-remote-control-for-html5-presentations/\",\n\"html/simple-responsive-image-technique/\"]\n```\n\n#### options.relaxerror\nType: `Array` <br/>\nDefault value: ``\n\nHelps to skip certain w3c errors messages from validation. Give exact error message or a regular expression in an array & validator will ignore those relaxed errors from validation. \n\n```js\nrelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\",\"document type does not allow element \\\"[A-Z]+\\\" here\"]\n```\n\n#### options.doctype\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- ``HTML5``\n- ``XHTML 1.0 Strict``\n- ``XHTML 1.0 Transitional``\n- ``XHTML 1.0 Frameset``\n- ``HTML 4.01 Strict``\n- ``HTML 4.01 Transitional``\n- ``HTML 4.01 Frameset``\n- ``HTML 4.01 + RDFa 1.1``\n- ``HTML 3.2``\n- ``HTML 2.0``\n- ``ISO/IEC 15445:2000 (\"ISO HTML\")``\n- ``XHTML 1.1``\n- ``XHTML + RDFa``\n- ``XHTML Basic 1.0``\n- ``XHTML Basic 1.1``\n- ``XHTML Mobile Profile 1.2``\n- ``XHTML-Print 1.0``\n- ``XHTML 1.1 plus MathML 2.0``\n- ``XHTML 1.1 plus MathML 2.0 plus SVG 1.1``\n- ``MathML 2.0``\n- ``SVG 1.0``\n- ``SVG 1.1``\n- ``SVG 1.1 Tiny``\n- ``SVG 1.1 Basic``\n- ``SMIL 1.0``\n- ``SMIL 2.0``\n\n\n#### options.charset\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- ``utf-8``\n- ``utf-16``\n- ``iso-8859-1``\n- ``iso-8859-2``\n- ``iso-8859-3``\n- ``iso-8859-4``\n- ``iso-8859-5``\n- ``iso-8859-6-i``\n- ``iso-8859-7``\n- ``iso-8859-8``\n- ``iso-8859-8-i``\n- ``iso-8859-9``\n- ``iso-8859-10``\n- ``iso-8859-11``\n- ``iso-8859-13``\n- ``iso-8859-14``\n- ``iso-8859-15``\n- ``iso-8859-16``\n- ``us-ascii``\n- ``euc-jp``\n- ``shift_jis``\n- ``iso-2022-jp``\n- ``euc-kr``\n- ``gb2312``\n- ``gb18030``\n- ``big5``\n- ``big5-HKSCS``\n- ``tis-620``\n- ``koi8-r``\n- ``koi8-u``\n- ``iso-ir-111``\n- ``macintosh``\n- ``windows-1250``\n- ``windows-1251``\n- ``windows-1252``\n- ``windows-1253``\n- ``windows-1254``\n- ``windows-1255``\n- ``windows-1256``\n- ``windows-1257``\n\n#### options.failHard\nType: `boolean` <br/>\nDefault value: `false`\n\nIf true, the task will fail at the end of its run if there were any validation errors that were not ignored via `options.relaxerror`.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\nReport issues [here](https://github.com/praveenvijayan/grunt-html-validation/issues)\n\n## Release History\n * 2013-12-17   v0.1.11  Option to set proxy, w3cjs updated to 0.1.22, added fail hard and some bug fixes\n * 2013-11-22   v0.1.9   Fix some bugs\n * 2013-11-22   v0.1.8   Added options for specify doctype and charset\n * 2013-11-22   v0.1.7   Added support for RegExp in relaxed validation\n * 2013-08-31   v0.1.6   Added relaxed validation, w3cjs updated from 0.1.9 to 0.1.10.  \n * 2013-08-31   v0.1.5   Added remote validation support. Max network error retry count.  \n * 2013-08-19   v0.1.4   Fixed issues. Added 'stoponerror' option, validation report added. \n * 2013-08-05   v0.1.2   Fixed issues.\n * 2013-04-20   v0.1.0   Initial release.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/praveenvijayan/grunt-html-validation/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.11","dist":{"shasum":"8e344b083d728e4dc60f1ce2398af4d12cd4a677","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.11.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}},"0.1.12":{"name":"grunt-html-validation","description":"W3C html validaton grunt plugin","version":"0.1.12","homepage":"https://github.com/praveenvijayan/grunt-html-validation","author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"bugs":{"url":"https://github.com/praveenvijayan/grunt-html-validation/issues"},"licenses":[{"type":"MIT","url":"https://github.com/praveenvijayan/grunt-html-validation/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"dependencies":{"w3cjs":"~0.1.22","colors":"~0.6.0","request":"~2.27.0"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"readme":"# grunt-html-validation [![Build Status](https://travis-ci.org/praveenvijayan/grunt-html-validation.png?branch=master)](https://travis-ci.org/praveenvijayan/grunt-html-validation)\n\n[![NPM](https://nodei.co/npm/grunt-html-validation.png?downloads=true)](https://nodei.co/npm/grunt-html-validation/)\n\n> W3C html validaton grunt plugin. Validate all files in a directory automatically. \n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\nAnd add to your task list using `validation`:\n\n```js\ngrunt.registerTask(\"default\", [\"validation\"]);\n```\n\n## The \"validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `validation` to the data object passed into `grunt.initConfig()`.\n\n```js\nvalidation: {\n\t\toptions: {\n\t\t\t\treset: grunt.option('reset') || false,\n\t\t\t\tstoponerror: false,\n\t\t\t\tremotePath: \"http://decodize.com/\",\n\t\t\t\tremoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"], //or\n\t\t\t\tremoteFiles: \"validation-files.json\", // JSON file contains array of page paths. \n\t\t\t\trelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\"] //ignores these errors\n\t\t},\n\t\tfiles: {\n\t\t\t\tsrc: ['<%= yeoman.app %>/*.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/index.html', \n\t\t\t\t\t\t'!<%= yeoman.app %>/modules.html',\n\t\t\t\t\t\t'!<%= yeoman.app %>/404.html']\n\t\t}\n}\n```\n\n### Options\n\n#### options.reset\nType: `Boolean` <br/>\nDefault value: `'false'`\n\nResets all the validated  files status. When want to revalidate all the validated files -\n`eg: sudo grunt validate --reset=true`\n\n#### options.proxy\nType: `String` <br/>\nDefault value: `null`\n\nSetup your proxy when you are behind a corporate proxy and encounters `ETIMEDOUT`.\n\n```js\nproxy: 'http://proxy:8080'\n```\n\n#### options.path\nType: `String` <br/>\nDefault value: `'validation-status.json'`\n\nDefault file for storing validation information.\n\n#### options.reportpath\nType: `String` <br/>\nDefault value: `validation-report.json`\n\nConsolidated report in JSON format, if reportpath is ``false`` it will not generated.\n\n#### options.stoponerror\nType: `Boolean` <br/>\nDefault value: `false`\n\nWhen hit by a validation error, html-validator continue validating next file by default and this process continues until all files in the list completes validation. If 'stoponerror' set to  `true`, validator will stop validating next file.\n\n#### options.maxTry\nType: `Number` <br/>\nDefault value: `3`\n\nNumber of retries when network error occuers. Default case, after 3 reties validator will move to next file.\n\n#### options.remotePath\nType: `String` <br/>\nDefault value: ``\n\nRemote base url path. eg: \"http://decodize.com/\". \n\n\n#### options.remoteFiles\nType: `Array` <br/>\nDefault value: ``\n\nArray of page paths to be validated. When remote files are not present validator will append file names from local folder. 'remotePath' is mandatory when this option is specified. \n\neg: remoteFiles: [\"html/moving-from-wordpress-to-octopress/\",\n\t\t\t\t\t\t\t\t\t\t\t\"css/site-preloading-methods/\"]\n\nyou can also provide a file contains array of pages.\n\nremoteFiles: \"validation-files.json\"\n\n```js\n[\"html/getting-started-with-yeoman-1-dot-0-beta-on-windows\",\n\"html/slidemote-universal-remote-control-for-html5-presentations/\",\n\"html/simple-responsive-image-technique/\"]\n```\n\n#### options.relaxerror\nType: `Array` <br/>\nDefault value: ``\n\nHelps to skip certain w3c errors messages from validation. Give exact error message or a regular expression in an array & validator will ignore those relaxed errors from validation. \n\n```js\nrelaxerror: [\"Bad value X-UA-Compatible for attribute http-equiv on element meta.\",\"document type does not allow element \\\"[A-Z]+\\\" here\"]\n```\n\n#### options.doctype\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- ``HTML5``\n- ``XHTML 1.0 Strict``\n- ``XHTML 1.0 Transitional``\n- ``XHTML 1.0 Frameset``\n- ``HTML 4.01 Strict``\n- ``HTML 4.01 Transitional``\n- ``HTML 4.01 Frameset``\n- ``HTML 4.01 + RDFa 1.1``\n- ``HTML 3.2``\n- ``HTML 2.0``\n- ``ISO/IEC 15445:2000 (\"ISO HTML\")``\n- ``XHTML 1.1``\n- ``XHTML + RDFa``\n- ``XHTML Basic 1.0``\n- ``XHTML Basic 1.1``\n- ``XHTML Mobile Profile 1.2``\n- ``XHTML-Print 1.0``\n- ``XHTML 1.1 plus MathML 2.0``\n- ``XHTML 1.1 plus MathML 2.0 plus SVG 1.1``\n- ``MathML 2.0``\n- ``SVG 1.0``\n- ``SVG 1.1``\n- ``SVG 1.1 Tiny``\n- ``SVG 1.1 Basic``\n- ``SMIL 1.0``\n- ``SMIL 2.0``\n\n\n#### options.charset\nType: `String` <br/>\nDefault value: `false`\n\nSet `false` for autodetect or chose one of this options:\n\n- ``utf-8``\n- ``utf-16``\n- ``iso-8859-1``\n- ``iso-8859-2``\n- ``iso-8859-3``\n- ``iso-8859-4``\n- ``iso-8859-5``\n- ``iso-8859-6-i``\n- ``iso-8859-7``\n- ``iso-8859-8``\n- ``iso-8859-8-i``\n- ``iso-8859-9``\n- ``iso-8859-10``\n- ``iso-8859-11``\n- ``iso-8859-13``\n- ``iso-8859-14``\n- ``iso-8859-15``\n- ``iso-8859-16``\n- ``us-ascii``\n- ``euc-jp``\n- ``shift_jis``\n- ``iso-2022-jp``\n- ``euc-kr``\n- ``gb2312``\n- ``gb18030``\n- ``big5``\n- ``big5-HKSCS``\n- ``tis-620``\n- ``koi8-r``\n- ``koi8-u``\n- ``iso-ir-111``\n- ``macintosh``\n- ``windows-1250``\n- ``windows-1251``\n- ``windows-1252``\n- ``windows-1253``\n- ``windows-1254``\n- ``windows-1255``\n- ``windows-1256``\n- ``windows-1257``\n\n#### options.failHard\nType: `boolean` <br/>\nDefault value: `false`\n\nIf true, the task will fail at the end of its run if there were any validation errors that were not ignored via `options.relaxerror`.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\nReport issues [here](https://github.com/praveenvijayan/grunt-html-validation/issues)\n\n## Release History\n * 2013-12-17   v0.1.11  Option to set proxy, w3cjs updated to 0.1.22, added fail hard and some bug fixes\n * 2013-11-22   v0.1.9   Fix some bugs\n * 2013-11-22   v0.1.8   Added options for specify doctype and charset\n * 2013-11-22   v0.1.7   Added support for RegExp in relaxed validation\n * 2013-08-31   v0.1.6   Added relaxed validation, w3cjs updated from 0.1.9 to 0.1.10.  \n * 2013-08-31   v0.1.5   Added remote validation support. Max network error retry count.  \n * 2013-08-19   v0.1.4   Fixed issues. Added 'stoponerror' option, validation report added. \n * 2013-08-05   v0.1.2   Fixed issues.\n * 2013-04-20   v0.1.0   Initial release.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/praveenvijayan/grunt-html-validation/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n","readmeFilename":"README.md","_id":"grunt-html-validation@0.1.12","dist":{"shasum":"79e5f2ca1adaf0aaa9c4b9f1e3e95272c29b4409","tarball":"http://registry.npmjs.org/grunt-html-validation/-/grunt-html-validation-0.1.12.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"},"maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"directories":{}}},"readme":"# grunt-html-validation\n\n> W3C html validaton grunt plugin\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-html-validation --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-html-validation');\n```\n\n## The \"html_validation\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `html_validation` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.separator\nType: `String`\nDefault value: `',  '`\n\nA string value that is used to do something with whatever.\n\n#### options.punctuation\nType: `String`\nDefault value: `'.'`\n\nA string value that is used to do something else with whatever else.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to do something with whatever. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result would be `Testing, 1 2 3.`\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {},\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n})\n```\n\n#### Custom Options\nIn this example, custom options are used to do something else with whatever else. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result in this case would be `Testing: 1 2 3 !!!`\n\n```js\ngrunt.initConfig({\n  html_validation: {\n    options: {\n      separator: ': ',\n      punctuation: ' !!!',\n    },\n    files: {\n      'dest/default_options': ['src/testing', 'src/123'],\n    },\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n","maintainers":[{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com"}],"time":{"0.1.0":"2013-04-20T09:00:52.315Z","0.1.2":"2013-08-19T13:26:14.783Z","0.1.3":"2013-08-19T13:44:47.583Z","0.1.4":"2013-08-23T16:46:38.055Z","0.1.5":"2013-09-12T06:14:07.876Z","0.1.6":"2013-10-14T19:09:31.693Z","0.1.10":"2013-11-28T15:09:28.160Z","0.1.11":"2013-12-18T03:23:07.405Z","0.1.12":"2013-12-18T03:32:52.769Z"},"author":{"name":"praveenvijayan","email":"praveenv.vijayan@gmail.com","url":"http://decodize.com"},"repository":{"type":"git","url":"git://github.com/praveenvijayan/grunt-html-validation.git"},"_attachments":{"grunt-html-validation-0.1.12.tgz":{"content_type":"application/octet-stream","revpos":78,"digest":"md5-l5PBH/TuupMQfP44mHo2Ig==","length":15088,"stub":true},"grunt-html-validation-0.1.11.tgz":{"content_type":"application/octet-stream","revpos":76,"digest":"md5-GPqw2fVo68g3JuopXAUOhw==","length":15088,"stub":true},"grunt-html-validation-0.1.10.tgz":{"content_type":"application/octet-stream","revpos":70,"digest":"md5-QgQxYJ2ZtXcnn2EYhZwG+A==","length":14767,"stub":true},"grunt-html-validation-0.1.6.tgz":{"content_type":"application/octet-stream","revpos":68,"digest":"md5-wJTPCoDKDPZUb7jv5GwcDQ==","length":14110,"stub":true},"grunt-html-validation-0.1.5.tgz":{"content_type":"application/octet-stream","revpos":62,"digest":"md5-vogkqZGuzgpsycsRohay1A==","length":12127,"stub":true},"grunt-html-validation-0.1.4.tgz":{"content_type":"application/octet-stream","revpos":52,"digest":"md5-W34ty9UxglF6Lo+xoUaaWA==","length":5272,"stub":true},"grunt-html-validation-0.1.3.tgz":{"content_type":"application/octet-stream","revpos":14,"digest":"md5-IbjOVhTDzrCpJlrKFw4Jag==","length":4419,"stub":true},"grunt-html-validation-0.1.2.tgz":{"content_type":"application/octet-stream","revpos":8,"digest":"md5-3RNzKSW6wTxqrUGaB/hXXg==","length":4425,"stub":true},"grunt-html-validation-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-oYcljXF/qpfheSh3SfuJYw==","length":4510,"stub":true}},"_etag":"\"5IIIP3YSJCP9A6NMKKJVFD5WY\""}