{"_id":"grunt-mocha-cli","_rev":"27-75899499ca890d08091e1a8ae5fd5e00","name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","dist-tags":{"latest":"1.4.0"},"versions":{"1.0.0":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.0","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"0.8.x"},"dependencies":{"mocha":"1.8.x"},"peerDependencies":{"grunt":"0.4.x"},"devDependencies":{"grunt":"0.4.x","grunt-contrib-jshint":"0.1.x","grunt-contrib-nodeunit":"0.1.x","coffee-script":"1.4.x","should":"1.2.x"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.0","dist":{"shasum":"f94343be9e9e4fe9bf5db7b0fbc80ce561d6aea0","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.0.tgz"},"_from":".","_npmVersion":"1.2.9","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.0.1":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.1","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"0.8.x"},"dependencies":{"mocha":"1.8.x"},"peerDependencies":{"grunt":"0.4.x"},"devDependencies":{"grunt":"0.4.x","grunt-contrib-jshint":"0.1.x","grunt-contrib-nodeunit":"0.1.x","coffee-script":"1.4.x","should":"1.2.x"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.1","dist":{"shasum":"da73f98fa2773aa5e94ca390b93c937c61f0eab5","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.1.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.0.2":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.2","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"0.10.x 0.8.x"},"dependencies":{"mocha":"1.8.x"},"peerDependencies":{"grunt":"0.4.x"},"devDependencies":{"grunt":"0.4.x","grunt-contrib-jshint":"0.1.x","grunt-contrib-nodeunit":"0.1.x","coffee-script":"1.4.x","should":"1.2.x"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.2","dist":{"shasum":"0913344560aebc25a8aa9e785952db2542cae728","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.2.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.0.3":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.3","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"0.10.x || 0.8.x"},"dependencies":{"mocha":"1.9.x"},"peerDependencies":{"grunt":"0.4.x"},"devDependencies":{"grunt":"0.4.x","grunt-contrib-jshint":"0.4.x","grunt-contrib-nodeunit":"0.1.x","coffee-script":"1.6.x","should":"1.2.x"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.3","dist":{"shasum":"b2df5b7f1374cc86991279482e70f0ad3604978d","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.3.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.0.4":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.4","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"0.10.x || 0.8.x"},"dependencies":{"mocha":"1.9.x"},"peerDependencies":{"grunt":"0.4.x"},"devDependencies":{"grunt":"0.4.x","grunt-contrib-jshint":"0.4.x","grunt-contrib-nodeunit":"0.1.x","coffee-script":"1.6.x","should":"1.2.x"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.4","dist":{"shasum":"9d8e297152d5ca54d2be0741887be48608a8de22","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.4.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.0.5":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.5","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"0.10.x || 0.8.x"},"dependencies":{"mocha":"1.9.x"},"peerDependencies":{"grunt":"0.4.x"},"devDependencies":{"grunt":"0.4.x","grunt-contrib-jshint":"0.4.x","grunt-contrib-nodeunit":"0.1.x","coffee-script":"1.6.x","should":"1.2.x"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.5","dist":{"shasum":"7c0a6aea6c3e5f853a69bae11ab8b5f20eda56ba","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.5.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.0.6":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.6","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"~0.10.0 || ~0.8.0"},"dependencies":{"mocha":"~1.10.0"},"peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"grunt":"~0.4.1","grunt-contrib-jshint":"~0.5.3","grunt-contrib-nodeunit":"~0.1.2","coffee-script":"~1.6.2","should":"~1.2.2"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.6","dist":{"shasum":"119a0c1a088d748fe1988537400915020704ebe2","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.6.tgz"},"_from":".","_npmVersion":"1.2.21","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.0.7":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.0.7","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"~0.10.0 || ~0.8.0"},"dependencies":{"mocha":"~1.12.0"},"peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"coffee-script":"~1.6.3","grunt":"~0.4.1","grunt-contrib-jshint":"~0.6.3","grunt-contrib-nodeunit":"~0.2.0","should":"~1.2.2"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"Grunt Mocha CLI\n===============\n\n[![Build Status](https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master)](http://travis-ci.org/Rowno/grunt-mocha-cli)\n[![Dependency Status](https://david-dm.org/Rowno/grunt-mocha-cli.png)](https://david-dm.org/Rowno/grunt-mocha-cli)\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `async-only` (boolean) - force all tests to take a callback (async).\n * `check-leaks` (boolean) - check for global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.0.7","dist":{"shasum":"297e1a6f0f70b190ea32cb0e753d1f60242dbfee","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.0.7.tgz"},"_from":".","_npmVersion":"1.3.7","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.1.0":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.1.0","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"~0.10.0 || ~0.8.0"},"dependencies":{"mocha":"~1.12.0"},"peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"coffee-script":"~1.6.3","grunt":"~0.4.1","grunt-contrib-jshint":"~0.6.3","grunt-contrib-nodeunit":"~0.2.0","should":"~1.2.2"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"Grunt Mocha CLI\n===============\n\n[![Build Status](https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master)](http://travis-ci.org/Rowno/grunt-mocha-cli)\n[![Dependency Status](https://david-dm.org/Rowno/grunt-mocha-cli.png)](https://david-dm.org/Rowno/grunt-mocha-cli)\n[![NPM version](https://badge.fury.io/js/grunt-mocha-cli.png)](https://npmjs.org/package/grunt-mocha-cli)\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `async-only` (boolean) - force all tests to take a callback (async).\n * `check-leaks` (boolean) - check for global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `force` (boolean) - continue running Grunt tasks even if tests fail.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.1.0","dist":{"shasum":"91235fc20bf88cf462a8de8148b9791910c6b4d8","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.1.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.2.0":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.2.0","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"~0.10.0 || ~0.8.0"},"dependencies":{"mocha":"~1.12.0"},"peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"coffee-script":"~1.6.3","grunt":"~0.4.1","grunt-contrib-jshint":"~0.6.3","grunt-contrib-nodeunit":"~0.2.0","should":"~1.2.2"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"Grunt Mocha CLI\n===============\n\n[![Build Status](https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master)](http://travis-ci.org/Rowno/grunt-mocha-cli)\n[![Dependency Status](https://david-dm.org/Rowno/grunt-mocha-cli.png)](https://david-dm.org/Rowno/grunt-mocha-cli)\n[![NPM version](https://badge.fury.io/js/grunt-mocha-cli.png)](https://npmjs.org/package/grunt-mocha-cli)\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `async-only` (boolean) - force all tests to take a callback (async).\n * `check-leaks` (boolean) - check for global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `force` (boolean) - continue running Grunt tasks even if tests fail.\n * `files` (string|array) - glob(s) of test files to run.\n * `env` (object) - hash of environment variables passed to the Mocha process. Default: `process.env`.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.2.0","dist":{"shasum":"8b63a3fb2756b4456312c51a7d7bbb03038eece9","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.2.0.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.2.1":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.2.1","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"~0.10.0 || ~0.8.0"},"dependencies":{"mocha":"~1.12.0"},"peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"coffee-script":"~1.6.3","grunt":"~0.4.1","grunt-contrib-jshint":"~0.6.3","grunt-contrib-nodeunit":"~0.2.0","should":"~1.2.2"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"Grunt Mocha CLI\n===============\n\n[![Build Status](https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master)](http://travis-ci.org/Rowno/grunt-mocha-cli)\n[![Dependency Status](https://david-dm.org/Rowno/grunt-mocha-cli.png)](https://david-dm.org/Rowno/grunt-mocha-cli)\n[![NPM version](https://badge.fury.io/js/grunt-mocha-cli.png)](https://npmjs.org/package/grunt-mocha-cli)\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `async-only` (boolean) - force all tests to take a callback (async).\n * `check-leaks` (boolean) - check for global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `force` (boolean) - continue running Grunt tasks even if tests fail.\n * `files` (string|array) - glob(s) of test files to run.\n * `env` (object) - hash of additional environment variables to pass to the Mocha process.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.2.1","dist":{"shasum":"a0745a3374bc4f355bac80b532dfc4f9b33d6505","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.2.1.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.3.0":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.3.0","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"~0.10.0 || ~0.8.0"},"dependencies":{"mocha":"~1.13.0"},"peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"coffee-script":"~1.6.3","grunt":"~0.4.1","grunt-contrib-jshint":"~0.6.3","grunt-contrib-nodeunit":"~0.2.0","should":"~1.3.0"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"Grunt Mocha CLI\n===============\n\n[![Build Status](https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master)](http://travis-ci.org/Rowno/grunt-mocha-cli)\n[![Dependency Status](https://david-dm.org/Rowno/grunt-mocha-cli.png)](https://david-dm.org/Rowno/grunt-mocha-cli)\n\n[![NPM](https://nodei.co/npm/grunt-mocha-cli.png?downloads=true&stars=true)](https://npmjs.org/package/grunt-mocha-cli)\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for `node --debug`.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `async-only` (boolean) - force all tests to take a callback (async).\n * `check-leaks` (boolean) - check for global variable leaks.\n * `sort` (boolean) - sort test files.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n * `require` (array) - require the given modules.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `force` (boolean) - continue running Grunt tasks even if tests fail.\n * `files` (string|array) - glob(s) of test files to run.\n * `env` (object) - hash of additional environment variables to pass to the Mocha process.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.3.0","dist":{"shasum":"ff2f5263dfb4f0f6cb463c868e812d451563a45c","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.3.0.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}},"1.4.0":{"name":"grunt-mocha-cli","description":"Run Mocha server-side tests in Grunt.","version":"1.4.0","author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"keywords":["gruntplugin","mocha"],"homepage":"https://github.com/Rowno/grunt-mocha-cli","repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"licenses":[{"type":"MIT","url":"https://raw.github.com/Rowno/grunt-mocha-cli/master/LICENSE"}],"bugs":{"url":"https://github.com/Rowno/grunt-mocha-cli/issues"},"engines":{"node":"~0.10.0 || ~0.8.0"},"dependencies":{"mocha":"~1.15.0"},"peerDependencies":{"grunt":"~0.4.1"},"devDependencies":{"coffee-script":"~1.6.3","grunt":"~0.4.1","grunt-contrib-jshint":"~0.7.2","grunt-contrib-nodeunit":"~0.2.0","should":"~2.1.0"},"scripts":{"test":"grunt test"},"main":"lib/mocha","readme":"Grunt Mocha CLI\n===============\n\n[![Build Status](https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master)](http://travis-ci.org/Rowno/grunt-mocha-cli)\n[![Dependency Status](https://david-dm.org/Rowno/grunt-mocha-cli.png)](https://david-dm.org/Rowno/grunt-mocha-cli)\n\n[![NPM](https://nodei.co/npm/grunt-mocha-cli.png?downloads=true&stars=true)](https://npmjs.org/package/grunt-mocha-cli)\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for `node --debug`.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `async-only` (boolean) - force all tests to take a callback (async).\n * `check-leaks` (boolean) - check for global variable leaks.\n * `sort` (boolean) - sort test files.\n * `inline-diffs` (boolean) - display actual/expected differences inline within each string.\n * `no-exit` (boolean) - require a clean shutdown of the event loop: mocha will not call `process.exit()`.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n * `require` (array) - require the given modules.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `force` (boolean) - continue running Grunt tasks even if tests fail.\n * `save` (string) - write the mocha output to a file.\n * `files` (string|array) - glob(s) of test files to run.\n * `env` (object) - hash of additional environment variables to pass to the Mocha process.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n","readmeFilename":"README.md","_id":"grunt-mocha-cli@1.4.0","dist":{"shasum":"04935df5f8d812a02e27f317ef082ba716873bf3","tarball":"http://registry.npmjs.org/grunt-mocha-cli/-/grunt-mocha-cli-1.4.0.tgz"},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"rowno","email":"rowno@webspirited.com"},"maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"directories":{}}},"readme":"# Grunt Mocha CLI [![Build Status][travis-image]][travis]\n\nRun [Mocha][] server-side tests in [Grunt][].\n\n\nGetting Started\n---------------\nIf you haven't used [Grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a Gruntfile as well as install and use Grunt plugins. You can install this plugin with this command:\n\n```bash\nnpm install grunt-mocha-cli --save-dev\n```\n\n\nUsage\n-----\n\n### Options ###\nAll of the Mocha command line options are supported, plus some extras.\n\nThe list of test files to run can be specified using either the standard Grunt format or by using the `files` option. If neither is specified, the Mocha default will be used (`test/*.js`).\n\n#### Mocha Options ####\n * `invert` (boolean) - inverts `grep` matches.\n * `colors` (boolean) - force enabling of colors.\n * `no-colors` (boolean) - force disabling of colors.\n * `growl` (boolean) - enable growl notification support.\n * `debug` (boolean) - enable node's debugger, synonym for node --debug.\n * `bail` (boolean) - bail after first test failure.\n * `recursive` (boolean) - include sub directories.\n * `debug-brk` (boolean) - enable node's debugger breaking on the first line.\n * `ignore-leaks` (boolean) - ignore global variable leaks.\n * `reporter` (string) - specify the reporter to use.\n * `ui` (string) - specify user-interface (bdd|tdd|exports).\n * `grep` (string) - only run tests matching pattern.\n * `timeout` (string) - set test-case timeout in milliseconds [2000].\n * `slow` (string) - \"slow\" test threshold in milliseconds [75].\n * `globals` (array) - allow the given comma-delimited global names.\n * `compilers` (array) - use the given module(s) to compile files.\n\n#### Extras ####\n * `quiet` (boolean) - disable printing of Mocha's output to the terminal.\n * `files` (string|array) - glob(s) of test files to run.\n\n\n### Examples ###\n\nDefine test files using the standard Grunt format:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            reporter: 'nyan',\n            bail: true\n        },\n        all: ['test/*.js']\n    }\n});\n\ngrunt.registerTask('test', ['mochacli']);\n```\n\nDefine test files and basic options once, then customise options per target:\n\n```javascript\ngrunt.initConfig({\n    mochacli: {\n        options: {\n            require: ['should'],\n            files: 'test/*.js'\n        },\n        spec: {\n            options: {\n                reporter: 'spec'\n            }\n        },\n        nyan: {\n            options: {\n                reporter: 'nyan'\n            }\n        }\n    }\n});\n\ngrunt.registerTask('test', ['mochacli:spec']);\n```\n\n\nContributing\n------------\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n\n\nLicense\n-------\nGrunt Mocha CLI is released under the MIT license.\n\nCopyright © 2013 Roland Warmerdam.\n\n\n[Mocha]: http://visionmedia.github.com/mocha/\n[Grunt]: http://gruntjs.com/\n[Getting Started]: http://gruntjs.com/getting-started\n[travis]: http://travis-ci.org/Rowno/grunt-mocha-cli\n[travis-image]: https://secure.travis-ci.org/Rowno/grunt-mocha-cli.png?branch=master\n","maintainers":[{"name":"rowno","email":"rowno@webspirited.com"}],"time":{"1.0.0":"2013-02-19T09:28:47.623Z","1.0.1":"2013-03-06T20:02:22.269Z","1.0.2":"2013-03-22T06:27:48.321Z","1.0.3":"2013-04-11T06:57:38.711Z","1.0.4":"2013-05-01T09:56:05.452Z","1.0.5":"2013-05-03T09:18:38.916Z","1.0.6":"2013-05-22T10:46:59.971Z","1.0.7":"2013-08-17T03:50:02.113Z","1.1.0":"2013-08-30T12:07:09.501Z","1.2.0":"2013-09-15T10:39:14.130Z","1.2.1":"2013-09-15T11:10:21.902Z","1.3.0":"2013-09-29T09:47:18.669Z","1.4.0":"2013-12-08T06:10:05.221Z"},"author":{"name":"Roland Warmerdam","url":"http://rolandwarmerdam.co.nz"},"repository":{"type":"git","url":"https://github.com/Rowno/grunt-mocha-cli.git"},"_attachments":{"grunt-mocha-cli-1.4.0.tgz":{"content_type":"application/octet-stream","revpos":26,"digest":"md5-8h9kbcDaNtIyPfCRJEt1nA==","length":9908,"stub":true},"grunt-mocha-cli-1.3.0.tgz":{"content_type":"application/octet-stream","revpos":24,"digest":"md5-lY4RYKKCjvx/oIr4UbjWpA==","length":9672,"stub":true},"grunt-mocha-cli-1.2.1.tgz":{"content_type":"application/octet-stream","revpos":22,"digest":"md5-LE5QNHHANinBfzRxIhdo7g==","length":9604,"stub":true},"grunt-mocha-cli-1.2.0.tgz":{"content_type":"application/octet-stream","revpos":20,"digest":"md5-LF5CJG+d3wEY6uVjhAQ31Q==","length":9539,"stub":true},"grunt-mocha-cli-1.1.0.tgz":{"content_type":"application/octet-stream","revpos":18,"digest":"md5-dfXRxVqN818+YFNKnrfpmA==","length":9355,"stub":true},"grunt-mocha-cli-1.0.7.tgz":{"content_type":"application/octet-stream","revpos":16,"digest":"md5-WQ1Zp7cAn0oftL/bKvLL4g==","length":5324,"stub":true},"grunt-mocha-cli-1.0.6.tgz":{"content_type":"application/octet-stream","revpos":14,"digest":"md5-smvJw6B5Wp9krGCOH21HQQ==","length":5271,"stub":true},"grunt-mocha-cli-1.0.5.tgz":{"content_type":"application/octet-stream","revpos":12,"digest":"md5-C82eu0rE3p0h6a6Wj55qNA==","length":5226,"stub":true},"grunt-mocha-cli-1.0.4.tgz":{"content_type":"application/octet-stream","revpos":10,"digest":"md5-wuj+gpCWlqgrNrBTH8PnUA==","length":5202,"stub":true},"grunt-mocha-cli-1.0.3.tgz":{"content_type":"application/octet-stream","revpos":8,"digest":"md5-dTasKvraW07vT7bJvRpkOQ==","length":5139,"stub":true},"grunt-mocha-cli-1.0.2.tgz":{"content_type":"application/octet-stream","revpos":6,"digest":"md5-PC4ieGIMzPmu8nHFav4xaA==","length":5095,"stub":true},"grunt-mocha-cli-1.0.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-Ww3SfhrDotu9dEfaCku+0A==","length":4956,"stub":true},"grunt-mocha-cli-1.0.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-hp1rUU7flNy0z4OkCfqaeg==","length":4626,"stub":true}},"_etag":"\"A3JBRBBUE2G13XNZISHNCHBZD\""}