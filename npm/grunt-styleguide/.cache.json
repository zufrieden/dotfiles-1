{"_id":"grunt-styleguide","_rev":"52-1c8b25f97d37ce7d68e3852408cd907a","name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt. Easily integrate Styledocco or KSS styleguide generation into your development workflow.","dist-tags":{"latest":"0.2.14"},"versions":{"0.1.0":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.1.0","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.3.17","grunt-contrib-jshint":"0.1.0","grunt-contrib-nodeunit":"0.1.0","grunt-contrib-clean":"~0.3.1"},"keywords":["gruntplugin"],"dependencies":{"less":"~1.3.0","styledocco":"https://github.com/indieisaconcept/styledocco/tarball/10c0262d53","grunt-lib-contrib":"~0.3.0"},"readme":"# grunt-styleguide\n\n> Universal CSS styleguide generator for grunt\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    // Task-specific options go here.\n    options: {\n      framework: 'styledocco'\n    },\n    \n    your_target: {\n    \t\n    \t// Target-specific options go here.\n\t    options: {\n\t        name: 'Style Guide',\n\t        include: ['plugin.css', 'app.js']\n\t    },\n\t\n\t    files: {\n\t        'docs': 'stylesheets/sass/*.scss'                  \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\n\n#### Options\n\n**grunt-styleguide** supports two levels of options, \"task\" which apply to all targets and those that can also be overriden on a target by target basis which are options specific to the styleguide framework in use.\n\n#### Task Defaults\n\n<table>\n  <tr>\n    <th>Key</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr>\n  <tr>\n    <td>framework</td><td>String or function (*)</td><td>styledocco</td><td>Used to specify which framework to use for the styleguide generation</td>\n  </tr>\n</table>\n\n> \\* See extending grunt-styleguide \n\n#### Framework Options\nFramework options are used to pass the appropriate arguments to a styleguide generator. These options have a 1:1 mapping to the frameworks available options.\n\nBy default **grunt-styleguide** will determine the CSS preprocess in use by evaluating the selected source files. This value will be passed as an option to framework plugins.\n\nFuture versions of **grunt-styleguide** will further rationalize these options for all frameworks.\n\n##### Currently Supported\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[node-kss]: https://github.com/hughsk/kss-node\n[kss]: http://warpspire.com/kss/\n[kss-standalone]: https://github.com/tmanderson/kss-standalone\n\n##### styledocco\n\n<table>\n  <tr>\n    <th>Key</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td><td>String</td><td>package.json name || 'Styleguide'</td><td>Name to use for the styleguide</td>\n  </tr><tr>\n    <td>include</td><td>Array</td><td>N/A</td><td>Additional CSS/JS to incluce in the generated styleguide output</td>\n  </tr>\n</table>\n\nFor more details on the supported options for **styledocco** can be found [styledocco][].\n\n##### Planned\n\nBy default styledocco is bundled however, future versions may provide support for the frameworks below.\n\n- [node-kss][]\n- [kss][] via [kss-standalone][]\n\n#### Extending grunt-styleguide\n\n**grunt-styleguide** is bundled with a default styleguide framework or frameworks to allow easy generation of styleguides. It is possible to add support for additional frameworks by passing a framework plugin via the \"framework\" task option.\n\nFramework plugins should be written in the following manner.\n\n```\nmodule.exports = {\n\n\tinit: function (grunt) {\n\t\n\t\t// defaults\n\t\tvar framework = require('some/framework');\n\t\n\t\treturn function (options, callback) {\n\t\t\n\t\t\tframework(options, function (result) {\n\t\t\t\n\t\t\t\tcallback(error, result);\n\t\t\t\n\t\t\t})\n\t\t\n\t\t}\n\t\n\t}\n\n}\n```\n\nA framework plugin when initialized should return a function which supports the following argument signature.\n\n##### Defaults \n\n<table>\n  <tr>\n    <th>Argument</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr><tr>\n    <td>styleguide</td>\n    <td>Object</td>\n    <td>{}</td>\n    <td>Styleguide framework options</td>\n  </tr></tr>\n    <td>callback</td><td>Function</td>\n    <td>this.asnyc()</td>\n    <td>Pass the async task handler grunt provides to the styleguide framework plugin</td>\n  </tr>\n</table>\n\n##### styleguide object\n\n<table>\n  <tr>\n    <th>Argument</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr><tr>\n    <td>preprocessor</td><td>String</td><td>\n    \tundefined\n    </td>\n    <td>CSS preprocessor to use </td>\n  </tr><tr>\n    <td>options</td>\n    <td>Object</td>\n    <td>{}</td>\n    <td>Styleguide framework options</td>\n  </tr><tr>\n    <td>files</td><td>Object</td><td>\n    \t{}\n    </td>\n    <td>Rationalized object containing, file, src, dest and base keys which detail file specific items.</td>\n  </tr>\n</table>\n\n**grunt-styleguide** will pass a rationalize `files` object describing the files you wish to process. These values should be mapped to the equivalent arguments provided by the framework.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n#### External grunt-styleguide Plugin\n\nThis example is similiar to the above except that the framework to use is explictly stated as either a name or function to be used.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \t\n  \t// global framework override\n  \toptions: {\n  \t\tframework: 'someother-framework'\n  \t}\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n  \t\n  \tdist: {\n  \t\t\n  \t\t// target based framework override\n  \t\toptions: {\n  \t\t\tframework: require('someother-framework')\n  \t\t},\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}  \t\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.1.0\n\n+ Initial Release\n","_id":"grunt-styleguide@0.1.0","dist":{"shasum":"4c11500740c35ed446f85c6533090d153c8559f5","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.1.0.tgz"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.1.1":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.1.1","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-nodeunit":"~0.1.0","grunt-contrib-clean":"~0.3.1","grunt":"~0.3.17"},"keywords":["gruntplugin","scss","sass","css","less","preprocessor","styleguide"],"dependencies":{"less":"~1.3.0","styledocco":"https://github.com/indieisaconcept/styledocco/tarball/10c0262d53","grunt-lib-contrib":"~0.3.0"},"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Supported frameworks\n\n- [styledocco][]\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    // Task-specific options go here.\n    options: {\n      framework: 'styledocco'\n    },\n    \n    your_target: {\n    \t\n    \t// Target-specific options go here.\n\t    options: {\n\t        name: 'Style Guide',\n\t        include: ['plugin.css', 'app.js']\n\t    },\n\t\n\t    files: {\n\t        'docs': 'stylesheets/sass/*.scss'                  \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\n\n#### Options\n\n**grunt-styleguide** supports two levels of options, \"task\" which apply to all targets and those that can also be overriden on a target by target basis which are options specific to the styleguide framework in use.\n\n#### Task Defaults\n\n<table>\n  <tr>\n    <th>Key</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr>\n  <tr>\n    <td>framework</td><td>String or function (*)</td><td>styledocco</td><td>Used to specify which framework to use for the styleguide generation</td>\n  </tr>\n</table>\n\n> \\* See extending grunt-styleguide \n\n#### Framework Options\nFramework options are used to pass the appropriate arguments to a styleguide generator. These options have a 1:1 mapping to the frameworks available options.\n\nBy default **grunt-styleguide** will determine the CSS preprocess in use by evaluating the selected source files. This value will be passed as an option to framework plugins.\n\nFuture versions of **grunt-styleguide** will further rationalize these options for all frameworks.\n\n##### Currently Supported\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[node-kss]: https://github.com/hughsk/kss-node\n[kss]: http://warpspire.com/kss/\n[kss-standalone]: https://github.com/tmanderson/kss-standalone\n\n##### styledocco\n\n<table>\n  <tr>\n    <th>Key</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td><td>String</td><td>package.json name || 'Styleguide'</td><td>Name to use for the styleguide</td>\n  </tr><tr>\n    <td>include</td><td>Array</td><td>N/A</td><td>Additional CSS/JS to incluce in the generated styleguide output</td>\n  </tr>\n</table>\n\nFor more details on the supported options for **styledocco** can be found [styledocco][].\n\n##### Planned\n\nBy default styledocco is bundled however, future versions may provide support for the frameworks below.\n\n- [node-kss][]\n- [kss][] via [kss-standalone][]\n\n#### Extending grunt-styleguide\n\n**grunt-styleguide** is bundled with a default styleguide framework or frameworks to allow easy generation of styleguides. It is possible to add support for additional frameworks by passing a framework plugin via the \"framework\" task option.\n\nFramework plugins should be written in the following manner.\n\n```\nmodule.exports = {\n\n\tinit: function (grunt) {\n\t\n\t\t// defaults\n\t\tvar framework = require('some/framework');\n\t\n\t\treturn function (options, callback) {\n\t\t\n\t\t\tframework(options, function (result) {\n\t\t\t\n\t\t\t\tcallback(error, result);\n\t\t\t\n\t\t\t})\n\t\t\n\t\t}\n\t\n\t}\n\n}\n```\n\nA framework plugin when initialized should return a function which supports the following argument signature.\n\n##### Defaults \n\n<table>\n  <tr>\n    <th>Argument</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr><tr>\n    <td>styleguide</td>\n    <td>Object</td>\n    <td>{}</td>\n    <td>Styleguide framework options</td>\n  </tr></tr>\n    <td>callback</td><td>Function</td>\n    <td>this.asnyc()</td>\n    <td>Pass the async task handler grunt provides to the styleguide framework plugin</td>\n  </tr>\n</table>\n\n##### styleguide object\n\n<table>\n  <tr>\n    <th>Argument</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr><tr>\n    <td>preprocessor</td><td>String</td><td>\n    \tundefined\n    </td>\n    <td>CSS preprocessor to use </td>\n  </tr><tr>\n    <td>options</td>\n    <td>Object</td>\n    <td>{}</td>\n    <td>Styleguide framework options</td>\n  </tr><tr>\n    <td>files</td><td>Object</td><td>\n    \t{}\n    </td>\n    <td>Rationalized object containing, file, src, dest and base keys which detail file specific items.</td>\n  </tr>\n</table>\n\n**grunt-styleguide** will pass a rationalize `files` object describing the files you wish to process. These values should be mapped to the equivalent arguments provided by the framework.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n#### External grunt-styleguide Plugin\n\nThis example is similiar to the above except that the framework to use is explictly stated as either a name or function to be used.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \t\n  \t// global framework override\n  \toptions: {\n  \t\tframework: 'someother-framework'\n  \t}\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n  \t\n  \tdist: {\n  \t\t\n  \t\t// target based framework override\n  \t\toptions: {\n  \t\t\tframework: require('someother-framework')\n  \t\t},\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}  \t\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","_id":"grunt-styleguide@0.1.1","dist":{"shasum":"79781d07b854b3227f4aca3ea67103e78a2520bd","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.1.1.tgz"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.0":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.0","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-nodeunit":"~0.1.0","grunt-contrib-clean":"~0.3.1","grunt":"~0.3.17"},"dependencies":{"grunt-lib-contrib":"~0.3.0","kss":"https://nodeload.github.com/indieisaconcept/kss-node/tarball/599f878d4f","wrench":"~1.3.9","styledocco":"~0.6.1","less":"~1.3.1"},"keywords":["gruntplugin","scss","sass","css","less","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>   \n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>    \n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Template can be configured to include files post compile and custom templates can be used</td>    \n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    options: {\n      // global options\n    },\n    \n    your_target: {\n    \t\n    \toptions: {\n    \t\t// task options\n    \t},\n\t\n\t    files: {\n\t        // files to process                \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>    \n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>    \n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>    \n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>    \n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object. \n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\t\t\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t},\n\t\t\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\t\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\t\n\t\toptions: {\n\t\t\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\t\t\t\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>    \n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","_id":"grunt-styleguide@0.2.0","dist":{"shasum":"6f6f6946255b6ae6b34c708dd3885ac222041048","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.0.tgz"},"_npmVersion":"1.1.62","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.1":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.1","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.6.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-nodeunit":"~0.1.0","grunt-contrib-clean":"~0.3.1","grunt":"~0.3.17"},"dependencies":{"grunt-lib-contrib":"~0.3.0","kss":"http://github.com/indieisaconcept/kss-node/archive/599f878d4f.tar.gz","wrench":"~1.3.9","styledocco":"~0.6.1","less":"~1.3.1"},"keywords":["gruntplugin","scss","sass","css","less","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>   \n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>    \n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Template can be configured to include files post compile and custom templates can be used</td>    \n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    options: {\n      // global options\n    },\n    \n    your_target: {\n    \t\n    \toptions: {\n    \t\t// task options\n    \t},\n\t\n\t    files: {\n\t        // files to process                \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>    \n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>    \n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>    \n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>    \n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object. \n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\t\t\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t},\n\t\t\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\t\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\t\n\t\toptions: {\n\t\t\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\t\t\t\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>    \n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","_id":"grunt-styleguide@0.2.1","dist":{"shasum":"d8187f861eb2255282e1c753e36fa7a1d8a431d2","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.1.tgz"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.2":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.2","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","kss":"http://github.com/indieisaconcept/kss-node/archive/599f878d4f.tar.gz","wrench":"~1.3.9","styledocco":"~0.6.1","less":"~1.3.1"},"keywords":["gruntplugin","scss","sass","css","less","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>   \n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>    \n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Template can be configured to include files post compile and custom templates can be used</td>    \n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    options: {\n      // global options\n    },\n    \n    your_target: {\n    \t\n    \toptions: {\n    \t\t// task options\n    \t},\n\t\n\t    files: {\n\t        // files to process                \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>    \n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>    \n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>    \n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>    \n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object. \n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\t\t\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t},\n\t\t\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\t\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\t\n\t\toptions: {\n\t\t\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\t\t\t\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>    \n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","_id":"grunt-styleguide@0.2.2","dist":{"shasum":"debbddbbf93ffdae1c4b0877ae00b13911fa7b96","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.2.tgz"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.4":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.4","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2","grunt-release":"~0.2.0"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.1","less":"~1.3.3","kss":"~0.3.5"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>   \n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>    \n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Template can be configured to include files post compile and custom templates can be used</td>    \n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    options: {\n      // global options\n    },\n    \n    your_target: {\n    \t\n    \toptions: {\n    \t\t// task options\n    \t},\n\t\n\t    files: {\n\t        // files to process                \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>    \n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>    \n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>    \n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>    \n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object. \n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\t\t\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t},\n\t\t\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\t\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\t\n\t\toptions: {\n\t\t\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\t\t\t\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>    \n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","_id":"grunt-styleguide@0.2.4","dist":{"shasum":"231c0bb19f72d09a59cdf61e815e3c22d50909ae","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.4.tgz"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.5":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.5","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2","grunt-release":"~0.2.0"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.1","less":"~1.3.3","kss":"~0.3.5"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>   \n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>    \n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Template can be configured to include files post compile and custom templates can be used</td>    \n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    options: {\n      // global options\n    },\n    \n    your_target: {\n    \t\n    \toptions: {\n    \t\t// task options\n    \t},\n\t\n\t    files: {\n\t        // files to process                \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>    \n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>    \n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>    \n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>    \n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object. \n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\t\t\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t},\n\t\t\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\t\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\t\n\t\toptions: {\n\t\t\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\t\t\t\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>    \n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.5\n\n- Node.js ~0.10.0 compatibility\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","_id":"grunt-styleguide@0.2.5","dist":{"shasum":"8d04c2e87897d4f72e2e8e5315ee2144149ec680","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.5.tgz"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.6":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.6","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2","grunt-release":"~0.2.0"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.1","less":"~1.3.3","kss":"~0.3.6"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>   \n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>    \n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>    \n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    options: {\n      // global options\n    },\n    \n    your_target: {\n    \t\n    \toptions: {\n    \t\t// task options\n    \t},\n\t\n\t    files: {\n\t        // files to process                \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>    \n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>    \n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>    \n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>    \n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>    \n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object. \n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\t\t\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t},\n\t\t\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\t\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\t\n\t\toptions: {\n\t\t\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\t\t\t\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>    \n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>    \n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>    \n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.6\n\n- Minor code tweaks to resolve some user issues \n\n### 0.2.5\n\n- Node.js ~0.10.0 compatibility\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.6","dist":{"shasum":"f313ee0628306d2292e055faca1d63a43650b564","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.6.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.7":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.7","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.1","less":"~1.3.3","kss":"~0.3.6"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.7\n\n- Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n\n### 0.2.6\n\n- Minor code tweaks to resolve some user issues\n\n### 0.2.5\n\n- Node.js ~0.10.0 compatibility\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.7","dist":{"shasum":"9312c3c13b37f9b2402c1bac713641efbf0cd45f","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.7.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.8":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.8","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.3","less":"~1.3.3","kss":"~0.3.6","stylus":"~0.38.0"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.8\n\n- Updated styledocco dependencies\n- Added Stylus\n\n### 0.2.7\n\n- Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n\n### 0.2.6\n\n- Minor code tweaks to resolve some user issues\n\n### 0.2.5\n\n- Node.js ~0.10.0 compatibility\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.8","dist":{"shasum":"9ad07dadf05e134f2fc244602a438ef1f3c37032","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.8.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.9":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.9","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.3","less":"~1.3.3","kss":"~0.3.6","stylus":"~0.38.0"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.9\n\n- Simplify styledocco plugin\n\n### 0.2.8\n\n- Updated styledocco dependencies\n- Added Stylus\n\n### 0.2.7\n\n- Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n\n### 0.2.6\n\n- Minor code tweaks to resolve some user issues\n\n### 0.2.5\n\n- Node.js ~0.10.0 compatibility\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.9","dist":{"shasum":"c9c1a91ea712a2e8552e9e67e596c59b11ebe9ba","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.9.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.10":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.10","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.3","less":"~1.3.3","kss":"~0.3.6","stylus":"~0.38.0"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.10\n\n- KSS fix (#15)\n\n### 0.2.9\n\n- Simplify styledocco plugin\n\n### 0.2.8\n\n- Updated styledocco dependencies\n- Added Stylus\n\n### 0.2.7\n\n- Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n\n### 0.2.6\n\n- Minor code tweaks to resolve some user issues\n\n### 0.2.5\n\n- Node.js ~0.10.0 compatibility\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.10","dist":{"shasum":"bb28c2812c79d2808aa73582c4f6f6640469fe91","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.10.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.11":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.11","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.4","less":"~1.3.3","kss":"~0.3.6","stylus":"~0.38.0"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be view [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.2.11\n\n- Updated styledocco dependency (#16)\n\n### 0.2.10\n\n- KSS fix (#15)\n\n### 0.2.9\n\n- Simplify styledocco plugin\n\n### 0.2.8\n\n- Updated styledocco dependencies\n- Added Stylus\n\n### 0.2.7\n\n- Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n\n### 0.2.6\n\n- Minor code tweaks to resolve some user issues\n\n### 0.2.5\n\n- Node.js ~0.10.0 compatibility\n\n### 0.2.4\n\n- Pass local less path to styledocco\n\n### 0.2.3\n\n- Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n\n### 0.2.2\n\n+ Grunt 0.4.0 support (~0.3.0 no longer supported)\n\n### 0.2.1\n\n+ Minor bug fix\n\n### 0.2.0\n\n+ Revised documentation\n+ Revised options structure\n+ Introduced template options\n+ Introduced node-kss\n\n### 0.1.1\n\n+ Travis support\n+ Grunt compatibility tweaks\n\n### 0.1.0\n\n+ Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.11","dist":{"shasum":"5c2c5637627118c8b530b1276d70218a0b984602","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.11.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.12":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt","version":"0.2.12","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.4","less":"1.x.x","kss":"~0.3.6","stylus":"~0.38.0"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide)\n\n[![NPM](https://nodei.co/npm/grunt-styleguide.png?downloads=true&stars=true)](https://nodei.co/npm/grunt-styleguide/)\n\n> Universal CSS styleguide generator for grunt\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, SASS</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be viewed [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n- 0.2.12\n\n    - Cleanup release history\n    - Use inherited version of LESS ( @pokornyr )\n    - Small documentation typo ( @simonwjackson )\n\n- 0.2.11 | Updated styledocco dependency (#16)\n- 0.2.10 | KSS fix (#15)\n- 0.2.9  | Simplify styledocco plugin\n\n- 0.2.8\n\n    - Updated styledocco dependencies\n    - Added Stylus\n\n- 0.2.7 | Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n- 0.2.6 | Minor code tweaks to resolve some user issues\n- 0.2.5 | Node.js ~0.10.0 compatibility\n- 0.2.4 | Pass local less path to styledocco\n- 0.2.3 | Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n- 0.2.2 | Grunt 0.4.0 support (~0.3.0 no longer supported)\n- 0.2.1 | Minor bug fix\n\n- 0.2.0\n\n    - Revised documentation\n    - Revised options structure\n    - Introduced template options\n    - Introduced node-kss\n\n- 0.1.1\n\n    - Travis support\n    - Grunt compatibility tweaks\n\n- 0.1.0 | Initial Release","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.12","dist":{"shasum":"c26c35e96eaf0eea30b7ebc5d5d9f7799e307990","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.12.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.13":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt. Easily integrate Styledocco or KSS styleguide generation into your development workflow.","version":"0.2.13","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"~0.6.4","less":"1.x.x","kss":"~0.3.6","stylus":"~0.38.0"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide) [![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/indieisaconcept/grunt-styleguide/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\") [![Views in the last 24 hours](https://sourcegraph.com/api/repos/github.com/indieisaconcept/grunt-styleguide/counters/views-24h.png)](https://sourcegraph.com/github.com/indieisaconcept/grunt-styleguide)\n\n[![NPM](https://nodei.co/npm/grunt-styleguide.png?downloads=true&stars=true)](https://nodei.co/npm/grunt-styleguide/)\n\n> Universal CSS styleguide generator for grunt. Easily integrate Styledocco or KSS styleguide generation into your development workflow.\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, Sass</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt-docs/blob/master/Getting-started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be viewed [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n- 0.2.13\n\n    - Relativize absolute paths\n    - Rewrite findBasePath function ( @mikedingjan )\n    - Update Grunt getting started docs url ( @iamblue )\n    - It's Sass, not SASS ( @kaelig )\n\n- 0.2.12\n\n    - Cleanup release history\n    - Use inherited version of LESS ( @pokornyr )\n    - Small documentation typo ( @simonwjackson )\n\n- 0.2.11 | Updated styledocco dependency (#16)\n- 0.2.10 | KSS fix (#15)\n- 0.2.9  | Simplify styledocco plugin\n\n- 0.2.8\n\n    - Updated styledocco dependencies\n    - Added Stylus\n\n- 0.2.7 | Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n- 0.2.6 | Minor code tweaks to resolve some user issues\n- 0.2.5 | Node.js ~0.10.0 compatibility\n- 0.2.4 | Pass local less path to styledocco\n- 0.2.3 | Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n- 0.2.2 | Grunt 0.4.0 support (~0.3.0 no longer supported)\n- 0.2.1 | Minor bug fix\n\n- 0.2.0\n\n    - Revised documentation\n    - Revised options structure\n    - Introduced template options\n    - Introduced node-kss\n\n- 0.1.1\n\n    - Travis support\n    - Grunt compatibility tweaks\n\n- 0.1.0 | Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.13","dist":{"shasum":"8aaba971e1a0ea3484af75c046e42a9711884194","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.13.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}},"0.2.14":{"name":"grunt-styleguide","description":"Universal CSS styleguide generator for grunt. Easily integrate Styledocco or KSS styleguide generation into your development workflow.","version":"0.2.14","homepage":"https://github.com/indieisaconcept/grunt-styleguide","author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"bugs":{"url":"https://github.com/indieisaconcept/grunt-styleguide/issues"},"licenses":[{"type":"MIT","url":"https://github.com/indieisaconcept/grunt-styleguide/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt":"~0.4.0","grunt-contrib-clean":"~0.4.0","grunt-contrib-jshint":"~0.1.1","grunt-contrib-nodeunit":"~0.1.2"},"peerDependencies":{"grunt":"~0.4.0"},"dependencies":{"grunt-lib-contrib":"~0.3.0","wrench":"~1.3.9","styledocco":"0.6.4","less":"1.x.x","kss":"~0.3.6","stylus":"~0.38.0"},"keywords":["gruntplugin","scss","sass","css","less","stylus","preprocessor","styleguide"],"readme":"# grunt-styleguide [![build status](https://secure.travis-ci.org/indieisaconcept/grunt-styleguide.png)](http://travis-ci.org/indieisaconcept/grunt-styleguide) [![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/indieisaconcept/grunt-styleguide/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\") [![Views in the last 24 hours](https://sourcegraph.com/api/repos/github.com/indieisaconcept/grunt-styleguide/counters/views-24h.png)](https://sourcegraph.com/github.com/indieisaconcept/grunt-styleguide)\n\n[![NPM](https://nodei.co/npm/grunt-styleguide.png?downloads=true&stars=true)](https://nodei.co/npm/grunt-styleguide/)\n\n> Universal CSS styleguide generator for grunt. Easily integrate Styledocco or KSS styleguide generation into your development workflow.\n\n## Frameworks\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[kss-node]: https://github.com/hughsk/kss-node\n[jss-styles]: https://github.com/jesseditson/jss\n[extending grunt-styleguide]: /grunt-styleguide/blob/jss/docs/extending_grunt-styleguide.md\n\n### Supported\n\n<table>\n  <tr>\n    <th>Framework</th>\n    <th>Preprocessor</th>\n\t<th>Templates</th>\n  </tr><tr>\n    <td><a href=\"http://jacobrask.github.com/styledocco/\">styledocco</a></td>\n    <td>Less, Sass</td>\n    <td>Default template provided by styledocco is used</td>\n  </tr><tr>\n    <td><a href=\"https://github.com/hughsk/kss-node\">kss-node</a></td>\n    <td>Less</td>\n    <td>Custom templates can be used</td>\n  </tr>\n</table>\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt-docs/blob/master/Getting-started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n    options: {\n      // global options\n    },\n\n    your_target: {\n\n    \toptions: {\n    \t\t// task options\n    \t},\n\n\t    files: {\n\t        // files to process\n\t    }\n\n    }\n\n  }\n\n})\n```\nAn example configuration can be viewed [here](https://gist.github.com/3932026)\n\n#### Options\n\nBy default **grunt-styleguide** will attempt to rationalize options for each of the styleguide frameworks supported depending upon the features available to the framework in use.\n\n##### Defaults\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Default</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>framework</td>\n    <td>String, object, function (*)</td>\n    <td>styledocco</td>\n    <td>No</td>\n    <td>Details about the styleguide framework</td>\n  </tr><tr>\n    <td>name</td>\n    <td>String</td>\n\t<td>undefined</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr><tr>\n    <td>template</td>\n    <td>Object</td>\n\t<td>Template bundled with framework</td>\n    <td>No</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr><tr>\n    <td>files</td>\n    <td>Object, String, Array</td>\n    <td>undefined</td>\n    <td>Yes</td>\n    <td>Details of the templetes to use for rendering if supported</td>\n  </tr>\n</table>\n\n> \\* See [extending grunt-styleguide]()\n\n#### Framework Options\n\nShould you wish to pass additional options which are supported by a framework then these can be passed as an options as part of the framework object.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\tframework: {\n\t\t\t\tname: 'framework_name',\n\t\t\t\toptions: {\n\t\t\t\t\t'somearg': 'somevalue',\n\t\t\t\t\t'someflag: true\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tfiles: {\n\t\t\t'path/to/dest': 'path/to/source'\n\t\t}\n\n\t}\n\n}\n```\n\n#### Template Options\n\nDepending upon the framework, it may be possible to also pass templates to use for rending a styleguide.\n\n```\nstyleguide: {\n\n\tdist: {\n\n\t\toptions: {\n\n\t\t\ttemplate: {\n\t\t\t\tsrc: 'path/to/templates',\n\t\t\t\tinclude: ['path/of/resources/to/include']\n\t\t\t}\n\n\t\t\tfiles: {\n\t\t\t\t'path/to/dest': 'path/to/source'\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n```\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n\t<th>Required</th>\n    <th>Description</th>\n  </tr><tr>\n    <td>src</td>\n    <td>String</td>\n    <td>No</td>\n    <td>Location of the template to use</td>\n  </tr><tr>\n    <td>include</td>\n    <td>String, Array</td>\n    <td>No</td>\n    <td>Title of the styleguide</td>\n  </tr>\n</table>\n\nDepending upon the framework you wish to use example templates can be found in:\n\n`node_modules/grunt-styleguide/templates/<framwork.name>/templates`\n\nA generic template is provide also:\n\n`node_modules/grunt-styleguide/templates/generic`\n\nCopy these to a location which is part of your project and modify your gruntfile to support your individual requirements.\n\n\n#### CSS Preprocessors\n\nBy default **grunt-styleguide** will determine the CSS preprocessor to use by evaluating the selected source files. This value will be passed as an option to framework and if supported will be used by it.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n\n  \tdist: {\n\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',\n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }\n\n  \t}\n\n  }\n\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n- 0.2.14\n\n    - Lock version of styledocco ( @jreading )\n\n- 0.2.13\n\n    - Relativize absolute paths\n    - Rewrite findBasePath function ( @mikedingjan )\n    - Update Grunt getting started docs url ( @iamblue )\n    - It's Sass, not SASS ( @kaelig )\n\n- 0.2.12\n\n    - Cleanup release history\n    - Use inherited version of LESS ( @pokornyr )\n    - Small documentation typo ( @simonwjackson )\n\n- 0.2.11 | Updated styledocco dependency (#16)\n- 0.2.10 | KSS fix (#15)\n- 0.2.9  | Simplify styledocco plugin\n\n- 0.2.8\n\n    - Updated styledocco dependencies\n    - Added Stylus\n\n- 0.2.7 | Cumulative fixes (Issues #18, #14, #11) [ sorry for the delay ]\n- 0.2.6 | Minor code tweaks to resolve some user issues\n- 0.2.5 | Node.js ~0.10.0 compatibility\n- 0.2.4 | Pass local less path to styledocco\n- 0.2.3 | Styleguide nolonger uses custom node-kss fork (includes nolonger supported for KSS beware)\n- 0.2.2 | Grunt 0.4.0 support (~0.3.0 no longer supported)\n- 0.2.1 | Minor bug fix\n\n- 0.2.0\n\n    - Revised documentation\n    - Revised options structure\n    - Introduced template options\n    - Introduced node-kss\n\n- 0.1.1\n\n    - Travis support\n    - Grunt compatibility tweaks\n\n- 0.1.0 | Initial Release\n","readmeFilename":"README.md","_id":"grunt-styleguide@0.2.14","dist":{"shasum":"2976c7ff2071945f1110dd3b32cc88bbd49cc202","tarball":"http://registry.npmjs.org/grunt-styleguide/-/grunt-styleguide-0.2.14.tgz"},"_from":".","_npmVersion":"1.3.5","_npmUser":{"name":"indieisaconcept","email":"me@indieisaconcept.com"},"maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"directories":{}}},"readme":"# grunt-styleguide\n\n> Universal CSS styleguide generator for grunt\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-styleguide --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-styleguide');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"styleguide\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `styleguide` to the data object passed into `grunt.initConfig()`.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n    // Task-specific options go here.\n    options: {\n      framework: 'styledocco'\n    },\n    \n    your_target: {\n    \t\n    \t// Target-specific options go here.\n\t    options: {\n\t        name: 'Style Guide',\n\t        include: ['plugin.css', 'app.js']\n\t    },\n\t\n\t    files: {\n\t        'docs': 'stylesheets/sass/*.scss'                  \n\t    }\n      \n    }\n    \n  }\n  \n})\n```\n\n#### Options\n\n**grunt-styleguide** supports two levels of options, \"task\" which apply to all targets and those that can also be overriden on a target by target basis which are options specific to the styleguide framework in use.\n\n#### Task Defaults\n\n<table>\n  <tr>\n    <th>Key</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr>\n  <tr>\n    <td>framework</td><td>String or function (*)</td><td>styledocco</td><td>Used to specify which framework to use for the styleguide generation</td>\n  </tr>\n</table>\n\n> \\* See extending grunt-styleguide \n\n#### Framework Options\nFramework options are used to pass the appropriate arguments to a styleguide generator. These options have a 1:1 mapping to the frameworks available options.\n\nBy default **grunt-styleguide** will determine the CSS preprocess in use by evaluating the selected source files. This value will be passed as an option to framework plugins.\n\nFuture versions of **grunt-styleguide** will further rationalize these options for all frameworks.\n\n##### Currently Supported\n\n[styledocco]: http://jacobrask.github.com/styledocco/\n[node-kss]: https://github.com/hughsk/kss-node\n[kss]: http://warpspire.com/kss/\n[kss-standalone]: https://github.com/tmanderson/kss-standalone\n\n##### styledocco\n\n<table>\n  <tr>\n    <th>Key</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td><td>String</td><td>package.json name || 'Styleguide'</td><td>Name to use for the styleguide</td>\n  </tr><tr>\n    <td>include</td><td>Array</td><td>N/A</td><td>Additional CSS/JS to incluce in the generated styleguide output</td>\n  </tr>\n</table>\n\nFor more details on the supported options for **styledocco** can be found [styledocco][].\n\n##### Planned\n\nBy default styledocco is bundled however, future versions may provide support for the frameworks below.\n\n- [node-kss][]\n- [kss][] via [kss-standalone][]\n\n#### Extending grunt-styleguide\n\n**grunt-styleguide** is bundled with a default styleguide framework or frameworks to allow easy generation of styleguides. It is possible to add support for additional frameworks by passing a framework plugin via the \"framework\" task option.\n\nFramework plugins should be written in the following manner.\n\n```\nmodule.exports = {\n\n\tinit: function (grunt) {\n\t\n\t\t// defaults\n\t\tvar framework = require('some/framework');\n\t\n\t\treturn function (options, callback) {\n\t\t\n\t\t\tframework(options, function (result) {\n\t\t\t\n\t\t\t\tcallback(error, result);\n\t\t\t\n\t\t\t})\n\t\t\n\t\t}\n\t\n\t}\n\n}\n```\n\nA framework plugin when initialized should return a function which supports the following argument signature.\n\n##### Defaults \n\n<table>\n  <tr>\n    <th>Argument</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr><tr>\n    <td>styleguide</td>\n    <td>Object</td>\n    <td>{}</td>\n    <td>Styleguide framework options</td>\n  </tr></tr>\n    <td>callback</td><td>Function</td>\n    <td>this.asnyc()</td>\n    <td>Pass the async task handler grunt provides to the styleguide framework plugin</td>\n  </tr>\n</table>\n\n##### styleguide object\n\n<table>\n  <tr>\n    <th>Argument</th><th>Type</th><th>Default</th><th>Description</th>\n  </tr><tr>\n    <td>preprocessor</td><td>String</td><td>\n    \tundefined\n    </td>\n    <td>CSS preprocessor to use </td>\n  </tr><tr>\n    <td>options</td>\n    <td>Object</td>\n    <td>{}</td>\n    <td>Styleguide framework options</td>\n  </tr><tr>\n    <td>files</td><td>Object</td><td>\n    \t{}\n    </td>\n    <td>Rationalized object containing, file, src, dest and base keys which detail file specific items.</td>\n  </tr>\n</table>\n\n**grunt-styleguide** will pass a rationalize `files` object describing the files you wish to process. These values should be mapped to the equivalent arguments provided by the framework.\n\n### Usage Examples\n\n#### Default Options\nIn this example a styleguide will be generated using the default generator, `styledocco`. Guides will be created for css/scss located within the **core** and **plugins** directory and output them to the appropriate destination specified.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n \n  }\n  \n});\n```\n\n#### External grunt-styleguide Plugin\n\nThis example is similiar to the above except that the framework to use is explictly stated as either a name or function to be used.\n\n```\ngrunt.initConfig({\n\n  styleguide: {\n  \t\n  \t// global framework override\n  \toptions: {\n  \t\tframework: 'someother-framework'\n  \t}\n  \n  \tdist: {\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}\n  \t\n  \tdist: {\n  \t\t\n  \t\t// target based framework override\n  \t\toptions: {\n  \t\t\tframework: require('someother-framework')\n  \t\t},\n  \t\n\t    files: {\n\t      'docs/core': 'stylesheets/sass/core/*.scss',    \n\t      'docs/plugins': 'stylesheets/sass/plugins/*.scss',\n\t    }  \t\n  \t\n  \t}  \t\n \n  }\n  \n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n\n### 0.1.0\n\n+ Initial Release\n","maintainers":[{"name":"indieisaconcept","email":"me@indieisaconcept.com"}],"time":{"0.1.0":"2012-10-19T02:39:17.688Z","0.1.1":"2012-10-19T11:19:04.905Z","0.2.0":"2012-10-25T00:17:07.146Z","0.2.1":"2012-11-09T14:58:10.056Z","0.2.2":"2013-02-19T11:12:26.482Z","0.2.4":"2013-03-09T05:32:54.347Z","0.2.5":"2013-04-10T14:31:47.084Z","0.2.6":"2013-06-04T13:18:26.534Z","0.2.7":"2013-10-05T14:18:10.693Z","0.2.8":"2013-10-05T14:42:04.470Z","0.2.9":"2013-10-06T15:15:55.095Z","0.2.10":"2013-10-06T23:50:32.196Z","0.2.11":"2013-10-08T11:42:17.417Z","0.2.12":"2013-10-29T11:30:19.924Z","0.2.13":"2013-12-19T11:39:23.892Z","0.2.14":"2014-01-03T01:35:18.832Z"},"author":{"name":"Jonathan Barnett","email":"me@indieisaconcept.com","url":"http://twitter.com/indieisaconcept"},"repository":{"type":"git","url":"git://github.com/indieisaconcept/grunt-styleguide.git"},"_attachments":{"grunt-styleguide-0.2.14.tgz":{"content_type":"application/octet-stream","revpos":51,"digest":"md5-Qt5Ub0/1Mt901ydD2W1ldw==","length":602511,"stub":true},"grunt-styleguide-0.2.13.tgz":{"content_type":"application/octet-stream","revpos":45,"digest":"md5-oRBpYB+/gN8haOUTNsfUCw==","length":602500,"stub":true},"grunt-styleguide-0.2.12.tgz":{"content_type":"application/octet-stream","revpos":40,"digest":"md5-ovqletTjEGuJgO9sU+Q1/Q==","length":594033,"stub":true},"grunt-styleguide-0.2.11.tgz":{"content_type":"application/octet-stream","revpos":38,"digest":"md5-VbbcS/QUvC491coUtJqwwg==","length":594495,"stub":true},"grunt-styleguide-0.2.10.tgz":{"content_type":"application/octet-stream","revpos":36,"digest":"md5-CqBHVVa5ta8v8q8gHC5N3A==","length":509257,"stub":true},"grunt-styleguide-0.2.9.tgz":{"content_type":"application/octet-stream","revpos":34,"digest":"md5-ZDQer0ZluyoymYUIo4ZLbQ==","length":594076,"stub":true},"grunt-styleguide-0.2.8.tgz":{"content_type":"application/octet-stream","revpos":32,"digest":"md5-zjCtN9oI8payrjQrSaOR7g==","length":594094,"stub":true},"grunt-styleguide-0.2.7.tgz":{"content_type":"application/octet-stream","revpos":26,"digest":"md5-fiyX/d+sbvcGBXSTS+RgQw==","length":594056,"stub":true},"grunt-styleguide-0.2.6.tgz":{"content_type":"application/octet-stream","revpos":24,"digest":"md5-v3+tXEEGM84x3ct8JcfFuQ==","length":606453,"stub":true},"grunt-styleguide-0.2.5.tgz":{"content_type":"application/octet-stream","revpos":23,"digest":"md5-YUKNfn2kpr+/EZdqZSg9xQ==","length":476353,"stub":true},"grunt-styleguide-0.2.4.tgz":{"content_type":"application/octet-stream","revpos":21,"digest":"md5-3aQZnkeviWiuEwsvbtCTvw==","length":481136,"stub":true},"grunt-styleguide-0.2.2.tgz":{"content_type":"application/octet-stream","revpos":19,"digest":"md5-UlUaHVdy52i6bAK7f+1ATw==","length":481831,"stub":true},"grunt-styleguide-0.2.1.tgz":{"content_type":"application/octet-stream","revpos":17,"digest":"md5-VonWfnZ/PokgAbF4Vyy8cA==","length":367025,"stub":true},"grunt-styleguide-0.2.0.tgz":{"content_type":"application/octet-stream","revpos":15,"digest":"md5-r49dlYQMT13PyjEz5OgsBQ==","length":529636,"stub":true},"grunt-styleguide-0.1.1.tgz":{"content_type":"application/octet-stream","revpos":9,"digest":"md5-EeD73RCs/+Yco4E7g+Ft4Q==","length":80772,"stub":true},"grunt-styleguide-0.1.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-Y0A+Ra1DhOuykm0GNIdYTQ==","length":280452,"stub":true}},"_etag":"\"8BE2I86330NRKCK2P7X3DO6VH\""}