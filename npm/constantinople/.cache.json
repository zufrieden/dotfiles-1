{"_id":"constantinople","_rev":"7-b5caf228346617db09721be5241f8082","name":"constantinople","description":"Determine whether a JavaScript expression evaluates to a constant (using UglifyJS)","dist-tags":{"latest":"1.0.2"},"versions":{"1.0.0":{"name":"constantinople","version":"1.0.0","description":"Determine whether a JavaScript expression evaluates to a constant (using UglifyJS)","keywords":[],"dependencies":{"uglify-js":"~2.3.6"},"devDependencies":{"mocha":"*"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"https://github.com/ForbesLindesay/constantinople.git"},"author":{"name":"ForbesLindesay"},"license":"MIT","readme":"# constantinople\r\n\r\nDetermine whether a JavaScript expression evaluates to a constant (using UglifyJS).  Here it is assumed to be safe to underestimate how constant something is.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/constantinople.png?branch=master)](https://travis-ci.org/ForbesLindesay/constantinople)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/constantinople.png)](https://gemnasium.com/ForbesLindesay/constantinople)\r\n[![NPM version](https://badge.fury.io/js/constantinople.png)](http://badge.fury.io/js/constantinople)\r\n\r\n## Installation\r\n\r\n    npm install constantinople\r\n\r\n## Usage\r\n\r\n```js\r\nvar isConstant = require('constantinople')\r\n\r\nif (isConstant('\"foo\" + 5')) {\r\n  console.dir(isConstant.toConstant('\"foo\" + 5'))\r\n}\r\n```\r\n\r\n## API\r\n\r\n### isConstant(src)\r\n\r\nReturns `true` if `src` evaluates to a constant, `false` otherwise.  It will also return `false` if there is a syntax error, which makes it safe to use on potentially ES6 code.\r\n\r\n### toConstant(src)\r\n\r\nReturns the value resulting from evaluating `src`.  This method throws an error if the expression is not constant.  e.g. `toConstant(\"Math.random()\")` would throw an error.\r\n\r\n## License\r\n\r\n  MIT","readmeFilename":"README.md","_id":"constantinople@1.0.0","dist":{"shasum":"550a82e33ad2f591d2b58fa5bba40380994d90ce","tarball":"http://registry.npmjs.org/constantinople/-/constantinople-1.0.0.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"forbeslindesay","email":"forbes@lindesay.co.uk"},"maintainers":[{"name":"forbeslindesay","email":"forbes@lindesay.co.uk"}],"directories":{}},"1.0.1":{"name":"constantinople","version":"1.0.1","description":"Determine whether a JavaScript expression evaluates to a constant (using UglifyJS)","keywords":[],"dependencies":{"uglify-js":"~2.3.6"},"devDependencies":{"mocha":"*"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"https://github.com/ForbesLindesay/constantinople.git"},"author":{"name":"ForbesLindesay"},"license":"MIT","readme":"# constantinople\r\n\r\nDetermine whether a JavaScript expression evaluates to a constant (using UglifyJS).  Here it is assumed to be safe to underestimate how constant something is.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/constantinople.png?branch=master)](https://travis-ci.org/ForbesLindesay/constantinople)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/constantinople.png)](https://gemnasium.com/ForbesLindesay/constantinople)\r\n[![NPM version](https://badge.fury.io/js/constantinople.png)](http://badge.fury.io/js/constantinople)\r\n\r\n## Installation\r\n\r\n    npm install constantinople\r\n\r\n## Usage\r\n\r\n```js\r\nvar isConstant = require('constantinople')\r\n\r\nif (isConstant('\"foo\" + 5')) {\r\n  console.dir(isConstant.toConstant('\"foo\" + 5'))\r\n}\r\n```\r\n\r\n## API\r\n\r\n### isConstant(src)\r\n\r\nReturns `true` if `src` evaluates to a constant, `false` otherwise.  It will also return `false` if there is a syntax error, which makes it safe to use on potentially ES6 code.\r\n\r\n### toConstant(src)\r\n\r\nReturns the value resulting from evaluating `src`.  This method throws an error if the expression is not constant.  e.g. `toConstant(\"Math.random()\")` would throw an error.\r\n\r\n## License\r\n\r\n  MIT","readmeFilename":"README.md","_id":"constantinople@1.0.1","dist":{"shasum":"038727385eb70567ffb5a825abc44870b56f4de9","tarball":"http://registry.npmjs.org/constantinople/-/constantinople-1.0.1.tgz"},"_from":".","_npmVersion":"1.2.10","_npmUser":{"name":"forbeslindesay","email":"forbes@lindesay.co.uk"},"maintainers":[{"name":"forbeslindesay","email":"forbes@lindesay.co.uk"}],"directories":{}},"1.0.2":{"name":"constantinople","version":"1.0.2","description":"Determine whether a JavaScript expression evaluates to a constant (using UglifyJS)","keywords":[],"dependencies":{"uglify-js":"~2.4.0"},"devDependencies":{"mocha":"*"},"scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"https://github.com/ForbesLindesay/constantinople.git"},"author":{"name":"ForbesLindesay"},"license":"MIT","readme":"# constantinople\r\n\r\nDetermine whether a JavaScript expression evaluates to a constant (using UglifyJS).  Here it is assumed to be safe to underestimate how constant something is.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/constantinople.png?branch=master)](https://travis-ci.org/ForbesLindesay/constantinople)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/constantinople.png)](https://gemnasium.com/ForbesLindesay/constantinople)\r\n[![NPM version](https://badge.fury.io/js/constantinople.png)](http://badge.fury.io/js/constantinople)\r\n\r\n## Installation\r\n\r\n    npm install constantinople\r\n\r\n## Usage\r\n\r\n```js\r\nvar isConstant = require('constantinople')\r\n\r\nif (isConstant('\"foo\" + 5')) {\r\n  console.dir(isConstant.toConstant('\"foo\" + 5'))\r\n}\r\n```\r\n\r\n## API\r\n\r\n### isConstant(src)\r\n\r\nReturns `true` if `src` evaluates to a constant, `false` otherwise.  It will also return `false` if there is a syntax error, which makes it safe to use on potentially ES6 code.\r\n\r\n### toConstant(src)\r\n\r\nReturns the value resulting from evaluating `src`.  This method throws an error if the expression is not constant.  e.g. `toConstant(\"Math.random()\")` would throw an error.\r\n\r\n## License\r\n\r\n  MIT","readmeFilename":"README.md","bugs":{"url":"https://github.com/ForbesLindesay/constantinople/issues"},"_id":"constantinople@1.0.2","dist":{"shasum":"0e64747dc836644d3f659247efd95231b48c3e71","tarball":"http://registry.npmjs.org/constantinople/-/constantinople-1.0.2.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"forbeslindesay","email":"forbes@lindesay.co.uk"},"maintainers":[{"name":"forbeslindesay","email":"forbes@lindesay.co.uk"}],"directories":{}}},"readme":"# constantinople\r\n\r\nDetermine whether a JavaScript expression evaluates to a constant (using UglifyJS).  Here it is assumed to be safe to underestimate how constant something is.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/constantinople.png?branch=master)](https://travis-ci.org/ForbesLindesay/constantinople)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/constantinople.png)](https://gemnasium.com/ForbesLindesay/constantinople)\r\n[![NPM version](https://badge.fury.io/js/constantinople.png)](http://badge.fury.io/js/constantinople)\r\n\r\n## Installation\r\n\r\n    npm install constantinople\r\n\r\n## Usage\r\n\r\n```js\r\nvar isConstant = require('constantinople')\r\n\r\nif (isConstant('\"foo\" + 5')) {\r\n  console.dir(isConstant.toConstant('\"foo\" + 5'))\r\n}\r\n```\r\n\r\n## API\r\n\r\n### isConstant(src)\r\n\r\nReturns `true` if `src` evaluates to a constant, `false` otherwise.  It will also return `false` if there is a syntax error, which makes it safe to use on potentially ES6 code.\r\n\r\n### toConstant(src)\r\n\r\nReturns the value resulting from evaluating `src`.  This method throws an error if the expression is not constant.  e.g. `toConstant(\"Math.random()\")` would throw an error.\r\n\r\n## License\r\n\r\n  MIT","maintainers":[{"name":"forbeslindesay","email":"forbes@lindesay.co.uk"}],"time":{"1.0.0":"2013-06-26T03:43:27.269Z","1.0.1":"2013-06-26T03:55:01.692Z","1.0.2":"2013-08-25T01:44:29.030Z"},"author":{"name":"ForbesLindesay"},"repository":{"type":"git","url":"https://github.com/ForbesLindesay/constantinople.git"},"_attachments":{"constantinople-1.0.2.tgz":{"content_type":"application/octet-stream","revpos":6,"digest":"md5-BlPpD1pLjdIVeEiS/db6AA==","length":2530,"stub":true},"constantinople-1.0.1.tgz":{"content_type":"application/octet-stream","revpos":5,"digest":"md5-/lS6hUc5f8pxmeYUQ0KN+w==","length":2527,"stub":true},"constantinople-1.0.0.tgz":{"content_type":"application/octet-stream","revpos":3,"digest":"md5-YvYAI5Ng1M8lwvj8HuNxKA==","length":2468,"stub":true}},"_etag":"\"TY6JEJWS10JB4ED1E95TYUDT\""}